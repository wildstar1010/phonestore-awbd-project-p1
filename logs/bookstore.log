2024-06-27 00:48:37 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 00:48:37 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 8776 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 00:48:37 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 00:48:37 - No active profile set, falling back to default profiles: default
2024-06-27 00:48:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 00:48:39 - Finished Spring Data repository scanning in 171 ms. Found 14 JPA repository interfaces.
2024-06-27 00:48:41 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 00:48:41 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 00:48:41 - Starting service [Tomcat]
2024-06-27 00:48:41 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 00:48:41 - Initializing Spring embedded WebApplicationContext
2024-06-27 00:48:41 - Root WebApplicationContext: initialization completed in 3214 ms
2024-06-27 00:48:41 - HikariPool-1 - Starting...
2024-06-27 00:48:41 - HikariPool-1 - Start completed.
2024-06-27 00:48:42 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
2024-06-27 00:48:42 - HikariPool-1 - Shutdown initiated...
2024-06-27 00:48:42 - HikariPool-1 - Shutdown completed.
2024-06-27 00:48:42 - Stopping service [Tomcat]
2024-06-27 00:48:42 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 00:48:42 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 00:49:45 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 00:49:45 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 31572 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 00:49:45 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 00:49:45 - No active profile set, falling back to default profiles: default
2024-06-27 00:49:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 00:49:46 - Finished Spring Data repository scanning in 128 ms. Found 14 JPA repository interfaces.
2024-06-27 00:49:48 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 00:49:48 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 00:49:48 - Starting service [Tomcat]
2024-06-27 00:49:48 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 00:49:48 - Initializing Spring embedded WebApplicationContext
2024-06-27 00:49:48 - Root WebApplicationContext: initialization completed in 2961 ms
2024-06-27 00:49:48 - HikariPool-1 - Starting...
2024-06-27 00:49:48 - HikariPool-1 - Start completed.
2024-06-27 00:49:49 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
2024-06-27 00:49:49 - HikariPool-1 - Shutdown initiated...
2024-06-27 00:49:49 - HikariPool-1 - Shutdown completed.
2024-06-27 00:49:49 - Stopping service [Tomcat]
2024-06-27 00:49:49 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 00:49:49 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 00:52:28 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 00:52:28 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 44520 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 00:52:28 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 00:52:28 - No active profile set, falling back to default profiles: default
2024-06-27 00:52:29 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 00:52:29 - Finished Spring Data repository scanning in 175 ms. Found 14 JPA repository interfaces.
2024-06-27 00:52:31 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 00:52:31 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 00:52:31 - Starting service [Tomcat]
2024-06-27 00:52:31 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 00:52:31 - Initializing Spring embedded WebApplicationContext
2024-06-27 00:52:31 - Root WebApplicationContext: initialization completed in 3039 ms
2024-06-27 00:52:31 - HikariPool-1 - Starting...
2024-06-27 00:52:32 - HikariPool-1 - Start completed.
2024-06-27 00:52:32 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #8 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
2024-06-27 00:52:32 - HikariPool-1 - Shutdown initiated...
2024-06-27 00:52:32 - HikariPool-1 - Shutdown completed.
2024-06-27 00:52:32 - Stopping service [Tomcat]
2024-06-27 00:52:32 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 00:52:32 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #8 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #8 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Failed to open the referenced table 'customer'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 00:55:58 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 42004 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 00:55:58 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 00:55:58 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 00:55:58 - No active profile set, falling back to default profiles: default
2024-06-27 00:56:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 00:56:00 - Finished Spring Data repository scanning in 179 ms. Found 14 JPA repository interfaces.
2024-06-27 00:56:02 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 00:56:02 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 00:56:02 - Starting service [Tomcat]
2024-06-27 00:56:02 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 00:56:02 - Initializing Spring embedded WebApplicationContext
2024-06-27 00:56:02 - Root WebApplicationContext: initialization completed in 3495 ms
2024-06-27 00:56:02 - HikariPool-1 - Starting...
2024-06-27 00:56:03 - HikariPool-1 - Start completed.
2024-06-27 00:56:03 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
2024-06-27 00:56:03 - HikariPool-1 - Shutdown initiated...
2024-06-27 00:56:03 - HikariPool-1 - Shutdown completed.
2024-06-27 00:56:03 - Stopping service [Tomcat]
2024-06-27 00:56:03 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 00:56:03 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Failed to open the referenced table 'customer'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 00:58:25 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 32636 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 00:58:25 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 00:58:25 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 00:58:25 - No active profile set, falling back to default profiles: default
2024-06-27 00:58:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 00:58:28 - Finished Spring Data repository scanning in 209 ms. Found 14 JPA repository interfaces.
2024-06-27 00:58:29 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 00:58:29 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 00:58:29 - Starting service [Tomcat]
2024-06-27 00:58:29 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 00:58:29 - Initializing Spring embedded WebApplicationContext
2024-06-27 00:58:29 - Root WebApplicationContext: initialization completed in 3995 ms
2024-06-27 00:58:30 - Fetching JDBC Connection from DataSource
2024-06-27 00:58:30 - HikariPool-1 - Starting...
2024-06-27 00:58:30 - HikariPool-1 - Start completed.
2024-06-27 00:58:30 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 00:58:30 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:58:30 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:58:30 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:58:30 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 00:58:30 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT )
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 00:58:30 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 00:58:30 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 00:58:30 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 00:58:30 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 00:58:30 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
2024-06-27 00:58:30 - HikariPool-1 - Shutdown initiated...
2024-06-27 00:58:30 - HikariPool-1 - Shutdown completed.
2024-06-27 00:58:30 - Stopping service [Tomcat]
2024-06-27 00:58:30 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 00:58:30 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Failed to open the referenced table 'customer'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 00:59:44 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 37820 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 00:59:44 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 00:59:44 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 00:59:44 - No active profile set, falling back to default profiles: default
2024-06-27 00:59:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 00:59:46 - Finished Spring Data repository scanning in 218 ms. Found 14 JPA repository interfaces.
2024-06-27 00:59:47 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 00:59:47 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 00:59:47 - Starting service [Tomcat]
2024-06-27 00:59:47 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 00:59:47 - Initializing Spring embedded WebApplicationContext
2024-06-27 00:59:47 - Root WebApplicationContext: initialization completed in 3594 ms
2024-06-27 00:59:48 - Fetching JDBC Connection from DataSource
2024-06-27 00:59:48 - HikariPool-1 - Starting...
2024-06-27 00:59:48 - HikariPool-1 - Start completed.
2024-06-27 00:59:48 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 00:59:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:59:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:59:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:59:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 00:59:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 00:59:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 00:59:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 00:59:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 00:59:48 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 00:59:48 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
2024-06-27 00:59:48 - HikariPool-1 - Shutdown initiated...
2024-06-27 00:59:48 - HikariPool-1 - Shutdown completed.
2024-06-27 00:59:48 - Stopping service [Tomcat]
2024-06-27 00:59:48 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 00:59:48 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Failed to open the referenced table 'customer'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:03:48 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:03:48 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 38060 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:03:48 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:03:48 - No active profile set, falling back to default profiles: default
2024-06-27 01:03:51 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:03:51 - Finished Spring Data repository scanning in 234 ms. Found 14 JPA repository interfaces.
2024-06-27 01:03:53 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:03:53 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:03:53 - Starting service [Tomcat]
2024-06-27 01:03:53 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:03:53 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:03:53 - Root WebApplicationContext: initialization completed in 4557 ms
2024-06-27 01:03:53 - Fetching JDBC Connection from DataSource
2024-06-27 01:03:53 - HikariPool-1 - Starting...
2024-06-27 01:03:54 - HikariPool-1 - Start completed.
2024-06-27 01:03:54 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:03:54 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:03:54 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:03:54 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:03:54 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:03:54 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:03:54 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:03:54 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:03:54 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:03:54 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #8 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
2024-06-27 01:03:54 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:03:54 - HikariPool-1 - Shutdown completed.
2024-06-27 01:03:54 - Stopping service [Tomcat]
2024-06-27 01:03:54 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:03:54 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #8 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #8 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Failed to open the referenced table 'customer'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:05:56 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:05:56 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 20612 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:05:56 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:05:56 - No active profile set, falling back to default profiles: default
2024-06-27 01:05:58 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:05:58 - Finished Spring Data repository scanning in 259 ms. Found 14 JPA repository interfaces.
2024-06-27 01:06:00 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:06:00 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:06:00 - Starting service [Tomcat]
2024-06-27 01:06:00 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:06:00 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:06:00 - Root WebApplicationContext: initialization completed in 4266 ms
2024-06-27 01:06:01 - Fetching JDBC Connection from DataSource
2024-06-27 01:06:01 - HikariPool-1 - Starting...
2024-06-27 01:06:01 - HikariPool-1 - Start completed.
2024-06-27 01:06:01 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:06:01 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:06:01 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:06:01 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:06:01 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:06:01 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:06:01 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:06:01 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:06:01 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:06:01 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:06:01 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
2024-06-27 01:06:01 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:06:01 - HikariPool-1 - Shutdown completed.
2024-06-27 01:06:01 - Stopping service [Tomcat]
2024-06-27 01:06:01 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:06:01 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Failed to open the referenced table 'customer'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:07:31 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:07:31 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 31484 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:07:31 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:07:31 - No active profile set, falling back to default profiles: default
2024-06-27 01:07:32 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:07:33 - Finished Spring Data repository scanning in 175 ms. Found 14 JPA repository interfaces.
2024-06-27 01:07:34 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:07:34 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:07:34 - Starting service [Tomcat]
2024-06-27 01:07:34 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:07:35 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:07:35 - Root WebApplicationContext: initialization completed in 3576 ms
2024-06-27 01:07:35 - Fetching JDBC Connection from DataSource
2024-06-27 01:07:35 - HikariPool-1 - Starting...
2024-06-27 01:07:35 - HikariPool-1 - Start completed.
2024-06-27 01:07:35 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:07:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:07:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:07:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:07:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:07:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:07:35 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:07:35 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
2024-06-27 01:07:35 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:07:35 - HikariPool-1 - Shutdown completed.
2024-06-27 01:07:36 - Stopping service [Tomcat]
2024-06-27 01:07:36 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:07:36 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Failed to open the referenced table 'customer'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:07:54 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:07:54 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 18500 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:07:54 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:07:54 - No active profile set, falling back to default profiles: default
2024-06-27 01:07:56 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:07:56 - Finished Spring Data repository scanning in 154 ms. Found 14 JPA repository interfaces.
2024-06-27 01:07:58 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:07:58 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:07:58 - Starting service [Tomcat]
2024-06-27 01:07:58 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:07:58 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:07:58 - Root WebApplicationContext: initialization completed in 3224 ms
2024-06-27 01:07:58 - Fetching JDBC Connection from DataSource
2024-06-27 01:07:58 - HikariPool-1 - Starting...
2024-06-27 01:07:58 - HikariPool-1 - Start completed.
2024-06-27 01:07:58 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:07:58 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:58 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:58 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:58 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:07:58 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:07:58 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:07:58 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:07:58 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:07:59 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:07:59 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:07:59 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:07:59 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:07:59 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:07:59 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:07:59 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:07:59 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:07:59 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:07:59 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
2024-06-27 01:07:59 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:07:59 - HikariPool-1 - Shutdown completed.
2024-06-27 01:07:59 - Stopping service [Tomcat]
2024-06-27 01:07:59 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:07:59 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) ); nested exception is java.sql.SQLException: Failed to open the referenced table 'customer'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Failed to open the referenced table 'customer'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:09:08 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 41424 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:09:08 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:09:08 - No active profile set, falling back to default profiles: default
2024-06-27 01:09:08 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:09:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:09:11 - Finished Spring Data repository scanning in 299 ms. Found 14 JPA repository interfaces.
2024-06-27 01:09:13 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:09:13 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:09:13 - Starting service [Tomcat]
2024-06-27 01:09:13 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:09:13 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:09:13 - Root WebApplicationContext: initialization completed in 4823 ms
2024-06-27 01:09:13 - Fetching JDBC Connection from DataSource
2024-06-27 01:09:13 - HikariPool-1 - Starting...
2024-06-27 01:09:14 - HikariPool-1 - Start completed.
2024-06-27 01:09:14 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:09:14 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:09:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:09:14 - 0 returned as update count for SQL: CREATE TABLE Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:09:14 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Google'), ('OnePlus'), ('Nokia'), ('Sony'), ('LG'), ('HTC'), ('Motorola'), ('Huawei'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Realme'), ('Asus'), ('Blackberry'), ('Lenovo'), ('Microsoft'), ('Honor'), ('ZTE')
2024-06-27 01:09:14 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 12', 1), ('Galaxy S21', 2), ('Pixel 5', 3), ('OnePlus 9', 4), ('Nokia 8.3', 5), ('Xperia 5', 6), ('V60 ThinQ', 7), ('Desire 21', 8), ('Edge Plus', 9), ('P40 Pro', 10), ('Mi 11', 11), ('Find X3', 12), ('X60 Pro', 13), ('GT 5G', 14), ('ROG Phone 5', 15), ('KEY2', 16), ('Z6 Pro', 17), ('Surface Duo', 18), ('Magic 3', 19), ('Axon 20', 20)
2024-06-27 01:09:14 - 10 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Alice Johnson'), ('Robert Brown'), ('David Wilson'), ('Emily Davis'), ('Michael White'), ('Sarah Martin'), ('James Lee'), ('Linda Clark')
2024-06-27 01:09:14 - 5 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store 1'), ('Store 2'), ('Store 3'), ('Store 4'), ('Store 5')
2024-06-27 01:09:14 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Employee 1', 1), ('Employee 2', 2), ('Employee 3', 3), ('Employee 4', 4), ('Employee 5', 5)
2024-06-27 01:09:14 - 5 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 12', 1, 1), ('Galaxy S21', 2, 2), ('Pixel 5', 3, 3), ('OnePlus 9', 4, 4), ('Nokia 8.3', 5, 5)
2024-06-27 01:09:14 - 5 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)
2024-06-27 01:09:14 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
2024-06-27 01:09:14 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:09:14 - HikariPool-1 - Shutdown completed.
2024-06-27 01:09:14 - Stopping service [Tomcat]
2024-06-27 01:09:14 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:09:14 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:09:40 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 35140 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:09:40 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:09:40 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:09:40 - No active profile set, falling back to default profiles: default
2024-06-27 01:09:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:09:42 - Finished Spring Data repository scanning in 173 ms. Found 14 JPA repository interfaces.
2024-06-27 01:09:43 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:09:43 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:09:43 - Starting service [Tomcat]
2024-06-27 01:09:43 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:09:43 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:09:43 - Root WebApplicationContext: initialization completed in 3440 ms
2024-06-27 01:09:44 - Fetching JDBC Connection from DataSource
2024-06-27 01:09:44 - HikariPool-1 - Starting...
2024-06-27 01:09:44 - HikariPool-1 - Start completed.
2024-06-27 01:09:44 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:09:44 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:09:44 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Google'), ('OnePlus'), ('Nokia'), ('Sony'), ('LG'), ('HTC'), ('Motorola'), ('Huawei'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Realme'), ('Asus'), ('Blackberry'), ('Lenovo'), ('Microsoft'), ('Honor'), ('ZTE')
2024-06-27 01:09:44 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 12', 1), ('Galaxy S21', 2), ('Pixel 5', 3), ('OnePlus 9', 4), ('Nokia 8.3', 5), ('Xperia 5', 6), ('V60 ThinQ', 7), ('Desire 21', 8), ('Edge Plus', 9), ('P40 Pro', 10), ('Mi 11', 11), ('Find X3', 12), ('X60 Pro', 13), ('GT 5G', 14), ('ROG Phone 5', 15), ('KEY2', 16), ('Z6 Pro', 17), ('Surface Duo', 18), ('Magic 3', 19), ('Axon 20', 20)
2024-06-27 01:09:44 - 10 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Alice Johnson'), ('Robert Brown'), ('David Wilson'), ('Emily Davis'), ('Michael White'), ('Sarah Martin'), ('James Lee'), ('Linda Clark')
2024-06-27 01:09:44 - 5 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store 1'), ('Store 2'), ('Store 3'), ('Store 4'), ('Store 5')
2024-06-27 01:09:44 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Employee 1', 1), ('Employee 2', 2), ('Employee 3', 3), ('Employee 4', 4), ('Employee 5', 5)
2024-06-27 01:09:44 - 5 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 12', 1, 1), ('Galaxy S21', 2, 2), ('Pixel 5', 3, 3), ('OnePlus 9', 4, 4), ('Nokia 8.3', 5, 5)
2024-06-27 01:09:44 - 5 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)
2024-06-27 01:09:44 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
2024-06-27 01:09:44 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:09:44 - HikariPool-1 - Shutdown completed.
2024-06-27 01:09:44 - Stopping service [Tomcat]
2024-06-27 01:09:44 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:09:45 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #9 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5); nested exception is java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Table 'phonestore.order' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:10:40 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 36344 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:10:40 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:10:40 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:10:40 - No active profile set, falling back to default profiles: default
2024-06-27 01:10:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:10:42 - Finished Spring Data repository scanning in 191 ms. Found 14 JPA repository interfaces.
2024-06-27 01:10:43 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:10:43 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:10:43 - Starting service [Tomcat]
2024-06-27 01:10:43 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:10:43 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:10:43 - Root WebApplicationContext: initialization completed in 3471 ms
2024-06-27 01:10:44 - Fetching JDBC Connection from DataSource
2024-06-27 01:10:44 - HikariPool-1 - Starting...
2024-06-27 01:10:44 - HikariPool-1 - Start completed.
2024-06-27 01:10:44 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:44 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:44 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:44 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:44 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.order']
2024-06-27 01:10:45 - SQLWarning ignored: SQL state '42S02', error code '1051', message [Unknown table 'phonestore.user']
2024-06-27 01:10:45 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1016 ms.
2024-06-27 01:10:45 - Fetching JDBC Connection from DataSource
2024-06-27 01:10:45 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:10:45 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:10:45 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Google'), ('OnePlus'), ('Nokia'), ('Sony'), ('LG'), ('HTC'), ('Motorola'), ('Huawei'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Realme'), ('Asus'), ('Blackberry'), ('Lenovo'), ('Microsoft'), ('Honor'), ('ZTE')
2024-06-27 01:10:45 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 12', 1), ('Galaxy S21', 2), ('Pixel 5', 3), ('OnePlus 9', 4), ('Nokia 8.3', 5), ('Xperia 5', 6), ('V60 ThinQ', 7), ('Desire 21', 8), ('Edge Plus', 9), ('P40 Pro', 10), ('Mi 11', 11), ('Find X3', 12), ('X60 Pro', 13), ('GT 5G', 14), ('ROG Phone 5', 15), ('KEY2', 16), ('Z6 Pro', 17), ('Surface Duo', 18), ('Magic 3', 19), ('Axon 20', 20)
2024-06-27 01:10:45 - 10 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Alice Johnson'), ('Robert Brown'), ('David Wilson'), ('Emily Davis'), ('Michael White'), ('Sarah Martin'), ('James Lee'), ('Linda Clark')
2024-06-27 01:10:45 - 5 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store 1'), ('Store 2'), ('Store 3'), ('Store 4'), ('Store 5')
2024-06-27 01:10:45 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Employee 1', 1), ('Employee 2', 2), ('Employee 3', 3), ('Employee 4', 4), ('Employee 5', 5)
2024-06-27 01:10:45 - 5 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 12', 1, 1), ('Galaxy S21', 2, 2), ('Pixel 5', 3, 3), ('OnePlus 9', 4, 4), ('Nokia 8.3', 5, 5)
2024-06-27 01:10:45 - 5 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)
2024-06-27 01:10:45 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5)
2024-06-27 01:10:45 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id) VALUES (1, 2, 1), (2, 3, 2), (3, 4, 3), (4, 5, 4), (5, 1, 5); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
2024-06-27 01:10:45 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:10:45 - HikariPool-1 - Shutdown completed.
2024-06-27 01:10:45 - Stopping service [Tomcat]
2024-06-27 01:10:45 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:10:45 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id) VALUES (1, 2, 1), (2, 3, 2), (3, 4, 3), (4, 5, 4), (5, 1, 5); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id) VALUES (1, 2, 1), (2, 3, 2), (3, 4, 3), (4, 5, 4), (5, 1, 5); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:13:36 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 41248 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:13:36 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:13:36 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:13:36 - No active profile set, falling back to default profiles: default
2024-06-27 01:13:38 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:13:38 - Finished Spring Data repository scanning in 189 ms. Found 14 JPA repository interfaces.
2024-06-27 01:13:39 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:13:39 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:13:39 - Starting service [Tomcat]
2024-06-27 01:13:39 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:13:40 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:13:40 - Root WebApplicationContext: initialization completed in 3417 ms
2024-06-27 01:13:40 - Fetching JDBC Connection from DataSource
2024-06-27 01:13:40 - HikariPool-1 - Starting...
2024-06-27 01:13:40 - HikariPool-1 - Start completed.
2024-06-27 01:13:40 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'repair' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'repair' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'review' already exists]
2024-06-27 01:13:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'repair' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'review' already exists]
2024-06-27 01:13:40 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'user' already exists]
2024-06-27 01:13:40 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 109 ms.
2024-06-27 01:13:40 - Fetching JDBC Connection from DataSource
2024-06-27 01:13:40 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:13:40 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:13:40 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Google'), ('OnePlus'), ('Nokia'), ('Sony'), ('LG'), ('HTC'), ('Motorola'), ('Huawei'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Realme'), ('Asus'), ('Blackberry'), ('Lenovo'), ('Microsoft'), ('Honor'), ('ZTE')
2024-06-27 01:13:40 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 12', 1), ('Galaxy S21', 2), ('Pixel 5', 3), ('OnePlus 9', 4), ('Nokia 8.3', 5), ('Xperia 5', 6), ('V60 ThinQ', 7), ('Desire 21', 8), ('Edge Plus', 9), ('P40 Pro', 10), ('Mi 11', 11), ('Find X3', 12), ('X60 Pro', 13), ('GT 5G', 14), ('ROG Phone 5', 15), ('KEY2', 16), ('Z6 Pro', 17), ('Surface Duo', 18), ('Magic 3', 19), ('Axon 20', 20)
2024-06-27 01:13:40 - 10 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Alice Johnson'), ('Robert Brown'), ('David Wilson'), ('Emily Davis'), ('Michael White'), ('Sarah Martin'), ('James Lee'), ('Linda Clark')
2024-06-27 01:13:40 - 5 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store 1'), ('Store 2'), ('Store 3'), ('Store 4'), ('Store 5')
2024-06-27 01:13:40 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Employee 1', 1), ('Employee 2', 2), ('Employee 3', 3), ('Employee 4', 4), ('Employee 5', 5)
2024-06-27 01:13:40 - 5 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 12', 1, 1), ('Galaxy S21', 2, 2), ('Pixel 5', 3, 3), ('OnePlus 9', 4, 4), ('Nokia 8.3', 5, 5)
2024-06-27 01:13:40 - 5 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)
2024-06-27 01:13:40 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5)
2024-06-27 01:13:40 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
2024-06-27 01:13:40 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:13:40 - HikariPool-1 - Shutdown completed.
2024-06-27 01:13:40 - Stopping service [Tomcat]
2024-06-27 01:13:41 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:13:41 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:14:09 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:14:09 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 25120 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:14:09 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:14:09 - No active profile set, falling back to default profiles: default
2024-06-27 01:14:11 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:14:11 - Finished Spring Data repository scanning in 223 ms. Found 14 JPA repository interfaces.
2024-06-27 01:14:13 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:14:13 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:14:13 - Starting service [Tomcat]
2024-06-27 01:14:13 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:14:13 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:14:13 - Root WebApplicationContext: initialization completed in 4037 ms
2024-06-27 01:14:13 - Fetching JDBC Connection from DataSource
2024-06-27 01:14:13 - HikariPool-1 - Starting...
2024-06-27 01:14:14 - HikariPool-1 - Start completed.
2024-06-27 01:14:14 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'repair' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'repair' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'review' already exists]
2024-06-27 01:14:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'repair' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'review' already exists]
2024-06-27 01:14:14 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'user' already exists]
2024-06-27 01:14:14 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 116 ms.
2024-06-27 01:14:14 - Fetching JDBC Connection from DataSource
2024-06-27 01:14:14 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:14:14 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:14:14 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Google'), ('OnePlus'), ('Nokia'), ('Sony'), ('LG'), ('HTC'), ('Motorola'), ('Huawei'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Realme'), ('Asus'), ('Blackberry'), ('Lenovo'), ('Microsoft'), ('Honor'), ('ZTE')
2024-06-27 01:14:14 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 12', 1), ('Galaxy S21', 2), ('Pixel 5', 3), ('OnePlus 9', 4), ('Nokia 8.3', 5), ('Xperia 5', 6), ('V60 ThinQ', 7), ('Desire 21', 8), ('Edge Plus', 9), ('P40 Pro', 10), ('Mi 11', 11), ('Find X3', 12), ('X60 Pro', 13), ('GT 5G', 14), ('ROG Phone 5', 15), ('KEY2', 16), ('Z6 Pro', 17), ('Surface Duo', 18), ('Magic 3', 19), ('Axon 20', 20)
2024-06-27 01:14:14 - 10 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Alice Johnson'), ('Robert Brown'), ('David Wilson'), ('Emily Davis'), ('Michael White'), ('Sarah Martin'), ('James Lee'), ('Linda Clark')
2024-06-27 01:14:14 - 5 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store 1'), ('Store 2'), ('Store 3'), ('Store 4'), ('Store 5')
2024-06-27 01:14:14 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Employee 1', 1), ('Employee 2', 2), ('Employee 3', 3), ('Employee 4', 4), ('Employee 5', 5)
2024-06-27 01:14:14 - 5 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 12', 1, 1), ('Galaxy S21', 2, 2), ('Pixel 5', 3, 3), ('OnePlus 9', 4, 4), ('Nokia 8.3', 5, 5)
2024-06-27 01:14:14 - 5 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)
2024-06-27 01:14:14 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id) VALUES (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5)
2024-06-27 01:14:14 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee' in 'field list'
2024-06-27 01:14:14 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:14:14 - HikariPool-1 - Shutdown completed.
2024-06-27 01:14:14 - Stopping service [Tomcat]
2024-06-27 01:14:14 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:14:14 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #10 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'employee' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:15:14 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:15:14 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 36752 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:15:14 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:15:14 - No active profile set, falling back to default profiles: default
2024-06-27 01:15:15 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:15:15 - Finished Spring Data repository scanning in 150 ms. Found 14 JPA repository interfaces.
2024-06-27 01:15:16 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:15:16 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:15:16 - Starting service [Tomcat]
2024-06-27 01:15:16 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:15:16 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:15:16 - Root WebApplicationContext: initialization completed in 2814 ms
2024-06-27 01:15:17 - Fetching JDBC Connection from DataSource
2024-06-27 01:15:17 - HikariPool-1 - Starting...
2024-06-27 01:15:17 - HikariPool-1 - Start completed.
2024-06-27 01:15:17 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'repair' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'repair' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'review' already exists]
2024-06-27 01:15:17 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'brand' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'model' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'phone' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'store' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'customer' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'employee' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'payment' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'stock' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'order' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'accessory' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'rental' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'repair' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'review' already exists]
2024-06-27 01:15:17 - SQLWarning ignored: SQL state '42S01', error code '1050', message [Table 'user' already exists]
2024-06-27 01:15:17 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 93 ms.
2024-06-27 01:15:17 - Fetching JDBC Connection from DataSource
2024-06-27 01:15:17 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:15:17 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:15:17 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
2024-06-27 01:15:17 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:15:17 - HikariPool-1 - Shutdown completed.
2024-06-27 01:15:17 - Stopping service [Tomcat]
2024-06-27 01:15:17 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:15:17 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'employee_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:17:40 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 28636 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:17:40 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:17:40 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:17:40 - No active profile set, falling back to default profiles: default
2024-06-27 01:17:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:17:42 - Finished Spring Data repository scanning in 166 ms. Found 14 JPA repository interfaces.
2024-06-27 01:17:43 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:17:43 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:17:43 - Starting service [Tomcat]
2024-06-27 01:17:43 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:17:43 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:17:43 - Root WebApplicationContext: initialization completed in 2853 ms
2024-06-27 01:17:43 - Fetching JDBC Connection from DataSource
2024-06-27 01:17:43 - HikariPool-1 - Starting...
2024-06-27 01:17:44 - HikariPool-1 - Start completed.
2024-06-27 01:17:44 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:17:44 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: DROP TABLE IF EXISTS Brand; nested exception is java.sql.SQLException: Cannot drop table 'brand' referenced by a foreign key constraint 'model_ibfk_1' on table 'model'.
2024-06-27 01:17:44 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:17:44 - HikariPool-1 - Shutdown completed.
2024-06-27 01:17:44 - Stopping service [Tomcat]
2024-06-27 01:17:44 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:17:44 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: DROP TABLE IF EXISTS Brand; nested exception is java.sql.SQLException: Cannot drop table 'brand' referenced by a foreign key constraint 'model_ibfk_1' on table 'model'.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]: DROP TABLE IF EXISTS Brand; nested exception is java.sql.SQLException: Cannot drop table 'brand' referenced by a foreign key constraint 'model_ibfk_1' on table 'model'.
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applySchemaScripts(AbstractScriptDatabaseInitializer.java:97)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:75)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLException: Cannot drop table 'brand' referenced by a foreign key constraint 'model_ibfk_1' on table 'model'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:19:26 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 1208 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:19:26 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:19:26 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:19:26 - No active profile set, falling back to default profiles: default
2024-06-27 01:19:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:19:28 - Finished Spring Data repository scanning in 190 ms. Found 14 JPA repository interfaces.
2024-06-27 01:19:30 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:19:30 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:19:30 - Starting service [Tomcat]
2024-06-27 01:19:30 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:19:30 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:19:30 - Root WebApplicationContext: initialization completed in 3516 ms
2024-06-27 01:19:30 - Fetching JDBC Connection from DataSource
2024-06-27 01:19:30 - HikariPool-1 - Starting...
2024-06-27 01:19:31 - HikariPool-1 - Start completed.
2024-06-27 01:19:31 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:19:31 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:19:31 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:19:31 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:19:31 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:19:31 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 936 ms.
2024-06-27 01:19:31 - Fetching JDBC Connection from DataSource
2024-06-27 01:19:31 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:19:31 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:19:32 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`phonestore`.`rental`, CONSTRAINT `rental_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`id`))
2024-06-27 01:19:32 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:19:32 - HikariPool-1 - Shutdown completed.
2024-06-27 01:19:32 - Stopping service [Tomcat]
2024-06-27 01:19:32 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:19:32 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`phonestore`.`rental`, CONSTRAINT `rental_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`id`))
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #2 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 2, 1, '2023-06-01', '2023-06-15'), (2, 3, 2, '2023-06-05', '2023-06-20'), (3, 4, 3, '2023-06-10', '2023-06-25'), (4, 5, 4, '2023-06-15', '2023-06-30'), (5, 1, 5, '2023-06-20', '2023-07-05'); nested exception is java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`phonestore`.`rental`, CONSTRAINT `rental_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`id`))
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`phonestore`.`rental`, CONSTRAINT `rental_ibfk_1` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:20:44 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:20:44 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 34376 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:20:44 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:20:44 - No active profile set, falling back to default profiles: default
2024-06-27 01:20:45 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:20:45 - Finished Spring Data repository scanning in 148 ms. Found 14 JPA repository interfaces.
2024-06-27 01:20:47 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:20:47 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:20:47 - Starting service [Tomcat]
2024-06-27 01:20:47 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:20:47 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:20:47 - Root WebApplicationContext: initialization completed in 3262 ms
2024-06-27 01:20:47 - Fetching JDBC Connection from DataSource
2024-06-27 01:20:47 - HikariPool-1 - Starting...
2024-06-27 01:20:48 - HikariPool-1 - Start completed.
2024-06-27 01:20:48 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:20:48 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:20:48 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:20:48 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:20:48 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:20:49 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:20:49 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:20:49 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 967 ms.
2024-06-27 01:20:49 - Fetching JDBC Connection from DataSource
2024-06-27 01:20:49 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:20:49 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:20:49 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:20:49 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:20:49 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:20:49 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:20:49 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:20:49 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:20:49 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:20:49 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:20:49 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:20:49 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id) VALUES ('Case', 1), ('Charger', 2)
2024-06-27 01:20:49 - 5 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 1, 1, '2023-06-01', '2023-06-15'), (2, 2, 2, '2023-06-05', '2023-06-20'), (3, 3, 3, '2023-06-10', '2023-06-25'), (4, 1, 4, '2023-06-15', '2023-06-30'), (5, 2, 5, '2023-06-20', '2023-07-05')
2024-06-27 01:20:49 - 1 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement')
2024-06-27 01:20:49 - 3 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average')
2024-06-27 01:20:49 - 2 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2')
2024-06-27 01:20:49 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 78 ms.
2024-06-27 01:20:49 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:20:49 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:20:49 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:20:50 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:20:51 - alter table accessory add column brand_id bigint not null
2024-06-27 01:20:51 - alter table rental add column payment_id bigint not null
2024-06-27 01:20:51 - alter table repair add column customer_id bigint not null
2024-06-27 01:20:51 - alter table review add column content varchar(255)
2024-06-27 01:20:51 - alter table accessory add constraint FK5qjniqrd41xgqhtbwwskryk5d foreign key (brand_id) references brand (id)
2024-06-27 01:20:51 - GenerationTarget encountered exception accepting command : Error executing DDL "alter table accessory add constraint FK5qjniqrd41xgqhtbwwskryk5d foreign key (brand_id) references brand (id)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table accessory add constraint FK5qjniqrd41xgqhtbwwskryk5d foreign key (brand_id) references brand (id)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:562)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:507)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`phonestore`.`#sql-5cec_64`, CONSTRAINT `FK5qjniqrd41xgqhtbwwskryk5d` FOREIGN KEY (`brand_id`) REFERENCES `brand` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 33 common frames omitted
2024-06-27 01:20:51 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:20:51 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:20:51 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:20:51 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:20:51 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:20:51 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:20:51 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:20:51 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:20:51 - alter table rental add constraint FKcs5aqo1hvl6f7ft91myow5g6c foreign key (payment_id) references payment (id)
2024-06-27 01:20:51 - GenerationTarget encountered exception accepting command : Error executing DDL "alter table rental add constraint FKcs5aqo1hvl6f7ft91myow5g6c foreign key (payment_id) references payment (id)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table rental add constraint FKcs5aqo1hvl6f7ft91myow5g6c foreign key (payment_id) references payment (id)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:562)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:507)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`phonestore`.`#sql-5cec_64`, CONSTRAINT `FKcs5aqo1hvl6f7ft91myow5g6c` FOREIGN KEY (`payment_id`) REFERENCES `payment` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 33 common frames omitted
2024-06-27 01:20:51 - alter table repair add constraint FKs492o3a20go94q78s6b8091nl foreign key (customer_id) references customer (id)
2024-06-27 01:20:52 - GenerationTarget encountered exception accepting command : Error executing DDL "alter table repair add constraint FKs492o3a20go94q78s6b8091nl foreign key (customer_id) references customer (id)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table repair add constraint FKs492o3a20go94q78s6b8091nl foreign key (customer_id) references customer (id)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:562)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:507)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`phonestore`.`#sql-5cec_64`, CONSTRAINT `FKs492o3a20go94q78s6b8091nl` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 33 common frames omitted
2024-06-27 01:20:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:20:52 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:20:52 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:20:54 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45bbb3e8, org.springframework.security.web.context.SecurityContextPersistenceFilter@6e627ab8, org.springframework.security.web.header.HeaderWriterFilter@325a781c, org.springframework.security.web.csrf.CsrfFilter@2fd409c1, org.springframework.security.web.authentication.logout.LogoutFilter@2f09907, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@175c26ff, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@496004e3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5058fefb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@795e8ef5, org.springframework.security.web.session.SessionManagementFilter@6ae5e1cf, org.springframework.security.web.access.ExceptionTranslationFilter@a0e35c3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@26723525]
2024-06-27 01:20:55 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:20:55 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:20:55 - Started StoreApplication in 11.751 seconds (JVM running for 12.461)
2024-06-27 01:21:04 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:21:04 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:21:04 - Completed initialization in 2 ms
2024-06-27 01:21:05 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [548] milliseconds.
2024-06-27 01:21:08 - No mapping for GET /css/styles.css
2024-06-27 01:21:08 - No mapping for GET /images/logo.png
2024-06-27 01:21:09 - No mapping for GET /static/css/styles.css
2024-06-27 01:21:09 - No mapping for GET /static/images/logo.png
2024-06-27 01:21:10 - Fetching all stores
2024-06-27 01:21:10 - Setting JDBC Connection [HikariProxyConnection@760178958 wrapping com.mysql.cj.jdbc.ConnectionImpl@232c22e1] read-only
2024-06-27 01:21:10 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:21:10 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@760178958 wrapping com.mysql.cj.jdbc.ConnectionImpl@232c22e1]
2024-06-27 01:21:11 - No mapping for GET /static/css/styles.css
2024-06-27 01:21:11 - No mapping for GET /favicon.ico
2024-06-27 01:21:17 - No mapping for GET /static/css/styles.css
2024-06-27 01:21:17 - No mapping for GET /static/images/logo.png
2024-06-27 01:21:17 - No mapping for GET /favicon.ico
2024-06-27 01:22:04 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:22:04 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:22:04 - HikariPool-1 - Shutdown completed.
2024-06-27 01:22:11 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:22:11 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 37948 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:22:11 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:22:11 - No active profile set, falling back to default profiles: default
2024-06-27 01:22:12 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:22:13 - Finished Spring Data repository scanning in 140 ms. Found 14 JPA repository interfaces.
2024-06-27 01:22:14 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:22:14 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:22:14 - Starting service [Tomcat]
2024-06-27 01:22:14 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:22:14 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:22:14 - Root WebApplicationContext: initialization completed in 2850 ms
2024-06-27 01:22:14 - Fetching JDBC Connection from DataSource
2024-06-27 01:22:14 - HikariPool-1 - Starting...
2024-06-27 01:22:15 - HikariPool-1 - Start completed.
2024-06-27 01:22:15 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:22:15 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:22:15 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:22:15 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:22:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:22:15 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 755 ms.
2024-06-27 01:22:15 - Fetching JDBC Connection from DataSource
2024-06-27 01:22:15 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:22:15 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:22:15 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:22:15 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:22:15 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:22:15 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:22:15 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:22:15 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:22:15 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:22:15 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:22:15 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:22:15 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
2024-06-27 01:22:15 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:22:15 - HikariPool-1 - Shutdown completed.
2024-06-27 01:22:15 - Stopping service [Tomcat]
2024-06-27 01:22:15 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:22:15 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #11 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:22:30 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:22:30 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 6420 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:22:30 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:22:30 - No active profile set, falling back to default profiles: default
2024-06-27 01:22:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:22:32 - Finished Spring Data repository scanning in 153 ms. Found 14 JPA repository interfaces.
2024-06-27 01:22:33 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:22:33 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:22:33 - Starting service [Tomcat]
2024-06-27 01:22:33 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:22:33 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:22:33 - Root WebApplicationContext: initialization completed in 3493 ms
2024-06-27 01:22:34 - Fetching JDBC Connection from DataSource
2024-06-27 01:22:34 - HikariPool-1 - Starting...
2024-06-27 01:22:34 - HikariPool-1 - Start completed.
2024-06-27 01:22:34 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:22:34 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:22:34 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:22:34 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:22:34 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:22:34 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:22:34 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:22:34 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:22:34 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:22:35 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:22:35 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:22:35 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:22:35 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:22:35 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:22:35 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:22:35 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:22:35 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:22:35 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:22:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:22:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:22:36 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1322 ms.
2024-06-27 01:22:36 - Fetching JDBC Connection from DataSource
2024-06-27 01:22:36 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:22:36 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:22:36 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:22:36 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:22:36 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:22:36 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:22:36 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:22:36 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:22:36 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:22:36 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:22:36 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:22:36 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id) VALUES ('Case', 1), ('Charger', 2)
2024-06-27 01:22:36 - 5 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 1, 1, '2023-06-01', '2023-06-15'), (2, 2, 2, '2023-06-05', '2023-06-20'), (3, 3, 3, '2023-06-10', '2023-06-25'), (4, 1, 4, '2023-06-15', '2023-06-30'), (5, 2, 5, '2023-06-20', '2023-07-05')
2024-06-27 01:22:36 - 1 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement')
2024-06-27 01:22:36 - 3 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average')
2024-06-27 01:22:36 - 2 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2')
2024-06-27 01:22:36 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:22:36 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:22:36 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:22:36 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:22:36 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:22:36 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:22:36 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:22:36 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:22:36 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:22:36 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:22:36 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
2024-06-27 01:22:36 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:22:36 - HikariPool-1 - Shutdown completed.
2024-06-27 01:22:36 - Stopping service [Tomcat]
2024-06-27 01:22:36 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:22:36 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:23:00 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:23:00 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 43112 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:23:00 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:23:00 - No active profile set, falling back to default profiles: default
2024-06-27 01:23:02 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:23:02 - Finished Spring Data repository scanning in 191 ms. Found 14 JPA repository interfaces.
2024-06-27 01:23:04 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:23:04 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:23:04 - Starting service [Tomcat]
2024-06-27 01:23:04 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:23:04 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:23:04 - Root WebApplicationContext: initialization completed in 3699 ms
2024-06-27 01:23:04 - Fetching JDBC Connection from DataSource
2024-06-27 01:23:04 - HikariPool-1 - Starting...
2024-06-27 01:23:05 - HikariPool-1 - Start completed.
2024-06-27 01:23:05 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:23:05 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:23:05 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:23:05 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:23:05 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:23:05 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:23:05 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:23:05 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:23:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:23:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:23:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:23:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:23:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:23:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:23:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:23:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:23:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:23:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:23:06 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1050 ms.
2024-06-27 01:23:06 - Fetching JDBC Connection from DataSource
2024-06-27 01:23:06 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:23:06 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:23:06 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:23:06 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:23:06 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:23:06 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:23:06 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:23:06 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:23:06 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:23:06 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:23:06 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:23:06 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id) VALUES ('Case', 1), ('Charger', 2)
2024-06-27 01:23:06 - 5 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 1, 1, '2023-06-01', '2023-06-15'), (2, 2, 2, '2023-06-05', '2023-06-20'), (3, 3, 3, '2023-06-10', '2023-06-25'), (4, 1, 4, '2023-06-15', '2023-06-30'), (5, 2, 5, '2023-06-20', '2023-07-05')
2024-06-27 01:23:06 - 1 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement')
2024-06-27 01:23:06 - 3 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average')
2024-06-27 01:23:06 - 2 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2')
2024-06-27 01:23:06 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:23:06 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:23:06 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:23:06 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:23:06 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:23:06 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:23:06 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:23:06 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:23:06 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:23:06 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:23:06 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
2024-06-27 01:23:06 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:23:06 - HikariPool-1 - Shutdown completed.
2024-06-27 01:23:06 - Stopping service [Tomcat]
2024-06-27 01:23:06 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:23:06 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:24:51 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:24:51 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 26072 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:24:51 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:24:51 - No active profile set, falling back to default profiles: default
2024-06-27 01:24:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:24:53 - Finished Spring Data repository scanning in 222 ms. Found 14 JPA repository interfaces.
2024-06-27 01:24:55 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:24:55 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:24:55 - Starting service [Tomcat]
2024-06-27 01:24:55 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:24:55 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:24:55 - Root WebApplicationContext: initialization completed in 4288 ms
2024-06-27 01:24:55 - Fetching JDBC Connection from DataSource
2024-06-27 01:24:55 - HikariPool-1 - Starting...
2024-06-27 01:24:56 - HikariPool-1 - Start completed.
2024-06-27 01:24:56 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:24:56 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:24:56 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:24:56 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:24:56 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:24:57 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:24:57 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1152 ms.
2024-06-27 01:24:57 - Fetching JDBC Connection from DataSource
2024-06-27 01:24:57 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:24:57 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:24:57 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:24:57 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:24:57 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:24:57 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:24:57 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:24:57 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:24:57 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:24:57 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:24:57 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:24:57 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id) VALUES ('Case', 1), ('Charger', 2)
2024-06-27 01:24:57 - 5 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 1, 1, '2023-06-01', '2023-06-15'), (2, 2, 2, '2023-06-05', '2023-06-20'), (3, 3, 3, '2023-06-10', '2023-06-25'), (4, 1, 4, '2023-06-15', '2023-06-30'), (5, 2, 5, '2023-06-20', '2023-07-05')
2024-06-27 01:24:57 - 1 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement')
2024-06-27 01:24:57 - 3 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average')
2024-06-27 01:24:57 - 2 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2')
2024-06-27 01:24:57 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:24:57 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:24:57 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:24:57 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:24:57 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:24:57 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:24:57 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:24:57 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:24:57 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:24:57 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:24:57 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
2024-06-27 01:24:57 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:24:57 - HikariPool-1 - Shutdown completed.
2024-06-27 01:24:57 - Stopping service [Tomcat]
2024-06-27 01:24:57 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:24:57 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:26:10 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:26:10 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 18840 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:26:10 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:26:10 - No active profile set, falling back to default profiles: default
2024-06-27 01:26:11 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:26:11 - Finished Spring Data repository scanning in 160 ms. Found 14 JPA repository interfaces.
2024-06-27 01:26:13 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:26:13 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:26:13 - Starting service [Tomcat]
2024-06-27 01:26:13 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:26:13 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:26:13 - Root WebApplicationContext: initialization completed in 3097 ms
2024-06-27 01:26:13 - Fetching JDBC Connection from DataSource
2024-06-27 01:26:13 - HikariPool-1 - Starting...
2024-06-27 01:26:14 - HikariPool-1 - Start completed.
2024-06-27 01:26:14 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:26:14 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:26:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:26:14 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:26:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:26:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:26:15 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 745 ms.
2024-06-27 01:26:15 - Fetching JDBC Connection from DataSource
2024-06-27 01:26:15 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:26:15 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:26:15 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:26:15 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:26:15 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:26:15 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:26:15 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:26:15 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:26:15 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:26:15 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:26:15 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:26:15 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id) VALUES ('Case', 1), ('Charger', 2)
2024-06-27 01:26:15 - 5 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 1, 1, '2023-06-01', '2023-06-15'), (2, 2, 2, '2023-06-05', '2023-06-20'), (3, 3, 3, '2023-06-10', '2023-06-25'), (4, 1, 4, '2023-06-15', '2023-06-30'), (5, 2, 5, '2023-06-20', '2023-07-05')
2024-06-27 01:26:15 - 1 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement')
2024-06-27 01:26:15 - 3 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average')
2024-06-27 01:26:15 - 2 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2')
2024-06-27 01:26:15 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:26:15 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:26:15 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:26:15 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:26:15 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:26:15 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:26:15 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:26:15 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:26:15 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:26:15 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:26:15 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2)
2024-06-27 01:26:15 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #27 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'field list'
2024-06-27 01:26:15 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:26:15 - HikariPool-1 - Shutdown completed.
2024-06-27 01:26:15 - Stopping service [Tomcat]
2024-06-27 01:26:15 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:26:15 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #27 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #27 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:28:02 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:28:02 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 14220 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:28:02 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:28:02 - No active profile set, falling back to default profiles: default
2024-06-27 01:28:03 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:28:03 - Finished Spring Data repository scanning in 143 ms. Found 14 JPA repository interfaces.
2024-06-27 01:28:05 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:28:05 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:28:05 - Starting service [Tomcat]
2024-06-27 01:28:05 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:28:05 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:28:05 - Root WebApplicationContext: initialization completed in 3195 ms
2024-06-27 01:28:05 - Fetching JDBC Connection from DataSource
2024-06-27 01:28:05 - HikariPool-1 - Starting...
2024-06-27 01:28:06 - HikariPool-1 - Start completed.
2024-06-27 01:28:06 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:28:06 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:28:06 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:28:06 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:28:06 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:28:07 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:28:07 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 945 ms.
2024-06-27 01:28:07 - Fetching JDBC Connection from DataSource
2024-06-27 01:28:07 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:28:07 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:28:07 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:28:07 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:28:07 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:28:07 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:28:07 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:28:07 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:28:07 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:28:07 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:28:07 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:28:07 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id) VALUES ('Case', 1), ('Charger', 2)
2024-06-27 01:28:07 - 5 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 1, 1, '2023-06-01', '2023-06-15'), (2, 2, 2, '2023-06-05', '2023-06-20'), (3, 3, 3, '2023-06-10', '2023-06-25'), (4, 1, 4, '2023-06-15', '2023-06-30'), (5, 2, 5, '2023-06-20', '2023-07-05')
2024-06-27 01:28:07 - 1 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement')
2024-06-27 01:28:07 - 3 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average')
2024-06-27 01:28:07 - 2 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2')
2024-06-27 01:28:07 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:28:07 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:28:07 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:28:07 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:28:07 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:28:07 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:28:07 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:28:07 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:28:07 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:28:07 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:28:07 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
2024-06-27 01:28:07 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:28:07 - HikariPool-1 - Shutdown completed.
2024-06-27 01:28:07 - Stopping service [Tomcat]
2024-06-27 01:28:07 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:28:07 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #26 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'brand_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:30:37 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 31088 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:30:37 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:30:37 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:30:37 - No active profile set, falling back to default profiles: default
2024-06-27 01:30:38 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:30:39 - Finished Spring Data repository scanning in 209 ms. Found 14 JPA repository interfaces.
2024-06-27 01:30:40 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:30:40 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:30:40 - Starting service [Tomcat]
2024-06-27 01:30:40 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:30:40 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:30:40 - Root WebApplicationContext: initialization completed in 3494 ms
2024-06-27 01:30:41 - Fetching JDBC Connection from DataSource
2024-06-27 01:30:41 - HikariPool-1 - Starting...
2024-06-27 01:30:41 - HikariPool-1 - Start completed.
2024-06-27 01:30:41 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:30:41 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:30:41 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:30:41 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:30:41 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:30:41 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id) )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:30:42 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:30:42 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1027 ms.
2024-06-27 01:30:42 - Fetching JDBC Connection from DataSource
2024-06-27 01:30:42 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:30:42 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:30:42 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:30:42 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:30:42 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:30:42 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:30:42 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:30:42 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:30:42 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:30:42 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:30:42 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:30:42 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id) VALUES ('Case', 1), ('Charger', 2)
2024-06-27 01:30:42 - 5 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date) VALUES (1, 1, 1, '2023-06-01', '2023-06-15'), (2, 2, 2, '2023-06-05', '2023-06-20'), (3, 3, 3, '2023-06-10', '2023-06-25'), (4, 1, 4, '2023-06-15', '2023-06-30'), (5, 2, 5, '2023-06-20', '2023-07-05')
2024-06-27 01:30:42 - 1 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement')
2024-06-27 01:30:42 - 3 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average')
2024-06-27 01:30:42 - 2 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2')
2024-06-27 01:30:42 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:30:42 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:30:42 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:30:42 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:30:42 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:30:42 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:30:42 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:30:42 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:30:42 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:30:42 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:30:42 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2)
2024-06-27 01:30:42 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #27 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'field list'
2024-06-27 01:30:42 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:30:42 - HikariPool-1 - Shutdown completed.
2024-06-27 01:30:42 - Stopping service [Tomcat]
2024-06-27 01:30:42 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2024-06-27 01:30:42 - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'scriptDataSourceInitializer' defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceInitializationConfiguration$SharedCredentialsDataSourceInitializationConfiguration.class]: Invocation of init method failed; nested exception is org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #27 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'field list'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #27 of URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5); nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'field list'
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:49)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:89)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:145)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:107)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:101)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:76)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:65)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 18 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'payment_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 28 common frames omitted
2024-06-27 01:32:18 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 33408 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:32:18 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:32:18 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:32:18 - No active profile set, falling back to default profiles: default
2024-06-27 01:32:19 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:32:20 - Finished Spring Data repository scanning in 200 ms. Found 14 JPA repository interfaces.
2024-06-27 01:32:21 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:32:21 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:32:21 - Starting service [Tomcat]
2024-06-27 01:32:21 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:32:22 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:32:22 - Root WebApplicationContext: initialization completed in 3522 ms
2024-06-27 01:32:22 - Fetching JDBC Connection from DataSource
2024-06-27 01:32:22 - HikariPool-1 - Starting...
2024-06-27 01:32:22 - HikariPool-1 - Start completed.
2024-06-27 01:32:22 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:32:22 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:32:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:32:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:32:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:32:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:32:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:32:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:32:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:32:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:32:23 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:32:23 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:32:23 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:32:23 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:32:23 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:32:23 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:32:23 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:32:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:32:23 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1053 ms.
2024-06-27 01:32:23 - Fetching JDBC Connection from DataSource
2024-06-27 01:32:23 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:32:23 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:32:23 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:32:23 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:32:23 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:32:23 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:32:23 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:32:23 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:32:23 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:32:23 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:32:23 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:32:23 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2)
2024-06-27 01:32:23 - 5 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5)
2024-06-27 01:32:23 - 1 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement')
2024-06-27 01:32:23 - 3 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average')
2024-06-27 01:32:23 - 2 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2')
2024-06-27 01:32:23 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 81 ms.
2024-06-27 01:32:24 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:32:24 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:32:24 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:32:24 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:32:26 - alter table repair add column customer_id bigint not null
2024-06-27 01:32:26 - alter table review add column content varchar(255)
2024-06-27 01:32:26 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:32:26 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:32:26 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:32:26 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:32:26 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:32:26 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:32:26 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:32:26 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:32:26 - alter table repair add constraint FKs492o3a20go94q78s6b8091nl foreign key (customer_id) references customer (id)
2024-06-27 01:32:26 - GenerationTarget encountered exception accepting command : Error executing DDL "alter table repair add constraint FKs492o3a20go94q78s6b8091nl foreign key (customer_id) references customer (id)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table repair add constraint FKs492o3a20go94q78s6b8091nl foreign key (customer_id) references customer (id)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:562)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:507)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`phonestore`.`#sql-5cec_b4`, CONSTRAINT `FKs492o3a20go94q78s6b8091nl` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 33 common frames omitted
2024-06-27 01:32:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:32:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:32:26 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:32:28 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@411576c7, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ae5e1cf, org.springframework.security.web.header.HeaderWriterFilter@a0e35c3, org.springframework.security.web.csrf.CsrfFilter@75caecf7, org.springframework.security.web.authentication.logout.LogoutFilter@7dc9b41a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1196537d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e627ab8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6b3da23f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@332610ad, org.springframework.security.web.session.SessionManagementFilter@325a781c, org.springframework.security.web.access.ExceptionTranslationFilter@3fe21d0e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@255b84a9]
2024-06-27 01:32:28 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:32:29 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:32:29 - Started StoreApplication in 11.507 seconds (JVM running for 12.233)
2024-06-27 01:32:46 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:32:46 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:32:46 - Completed initialization in 1 ms
2024-06-27 01:32:46 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [589] milliseconds.
2024-06-27 01:32:47 - No mapping for GET /css/styles.css
2024-06-27 01:32:47 - No mapping for GET /images/logo.png
2024-06-27 01:32:49 - No mapping for GET /static/css/styles.css
2024-06-27 01:32:49 - No mapping for GET /static/images/logo.png
2024-06-27 01:32:50 - Fetching all stores
2024-06-27 01:32:50 - Setting JDBC Connection [HikariProxyConnection@1651611288 wrapping com.mysql.cj.jdbc.ConnectionImpl@18ad77b2] read-only
2024-06-27 01:32:50 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:32:50 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1651611288 wrapping com.mysql.cj.jdbc.ConnectionImpl@18ad77b2]
2024-06-27 01:32:50 - No mapping for GET /static/css/styles.css
2024-06-27 01:33:38 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:33:38 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:33:38 - HikariPool-1 - Shutdown completed.
2024-06-27 01:33:46 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:33:46 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 15868 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:33:46 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:33:46 - No active profile set, falling back to default profiles: default
2024-06-27 01:33:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:33:48 - Finished Spring Data repository scanning in 226 ms. Found 14 JPA repository interfaces.
2024-06-27 01:33:50 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:33:50 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:33:50 - Starting service [Tomcat]
2024-06-27 01:33:50 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:33:50 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:33:50 - Root WebApplicationContext: initialization completed in 4035 ms
2024-06-27 01:33:51 - Fetching JDBC Connection from DataSource
2024-06-27 01:33:51 - HikariPool-1 - Starting...
2024-06-27 01:33:51 - HikariPool-1 - Start completed.
2024-06-27 01:33:51 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:33:51 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:33:51 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:33:51 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:33:51 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:33:51 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:33:51 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:33:51 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:33:51 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:33:52 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:33:52 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:33:52 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:33:52 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:33:52 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:33:52 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:33:52 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:33:52 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:33:52 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:33:52 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1042 ms.
2024-06-27 01:33:52 - Fetching JDBC Connection from DataSource
2024-06-27 01:33:52 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:33:52 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:33:52 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:33:52 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:33:52 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:33:52 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:33:52 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:33:52 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:33:52 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:33:52 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:33:52 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:33:52 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2)
2024-06-27 01:33:52 - 5 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5)
2024-06-27 01:33:52 - 1 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement')
2024-06-27 01:33:52 - 3 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average')
2024-06-27 01:33:52 - 2 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2')
2024-06-27 01:33:52 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 70 ms.
2024-06-27 01:33:53 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:33:53 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:33:53 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:33:53 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:33:55 - alter table repair add column customer_id bigint not null
2024-06-27 01:33:55 - alter table review add column content varchar(255)
2024-06-27 01:33:55 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:33:55 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:33:55 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:33:55 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:33:55 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:33:55 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:33:55 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:33:55 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:33:55 - alter table repair add constraint FKs492o3a20go94q78s6b8091nl foreign key (customer_id) references customer (id)
2024-06-27 01:33:55 - GenerationTarget encountered exception accepting command : Error executing DDL "alter table repair add constraint FKs492o3a20go94q78s6b8091nl foreign key (customer_id) references customer (id)" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "alter table repair add constraint FKs492o3a20go94q78s6b8091nl foreign key (customer_id) references customer (id)" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:562)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:507)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applyForeignKeys(AbstractSchemaMigrator.java:433)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:249)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:114)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:184)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:318)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:468)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at dev.project.awbd.StoreApplication.main(StoreApplication.java:13)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`phonestore`.`#sql-5cec_be`, CONSTRAINT `FKs492o3a20go94q78s6b8091nl` FOREIGN KEY (`customer_id`) REFERENCES `customer` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:764)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:648)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 33 common frames omitted
2024-06-27 01:33:55 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:33:55 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:33:55 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:33:57 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@128d397c, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b3da23f, org.springframework.security.web.header.HeaderWriterFilter@703947bd, org.springframework.security.web.csrf.CsrfFilter@1fc4b8d6, org.springframework.security.web.authentication.logout.LogoutFilter@43c64d6f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2df24f19, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5058fefb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@742aa00a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@294ab038, org.springframework.security.web.session.SessionManagementFilter@46bff388, org.springframework.security.web.access.ExceptionTranslationFilter@496004e3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@795e8ef5]
2024-06-27 01:33:58 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:33:58 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:33:58 - Started StoreApplication in 12.938 seconds (JVM running for 13.78)
2024-06-27 01:34:02 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:34:02 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:34:02 - HikariPool-1 - Shutdown completed.
2024-06-27 01:34:29 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 34516 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:34:29 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:34:29 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:34:29 - No active profile set, falling back to default profiles: default
2024-06-27 01:34:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:34:31 - Finished Spring Data repository scanning in 157 ms. Found 14 JPA repository interfaces.
2024-06-27 01:34:32 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:34:32 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:34:32 - Starting service [Tomcat]
2024-06-27 01:34:32 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:34:32 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:34:32 - Root WebApplicationContext: initialization completed in 2980 ms
2024-06-27 01:34:32 - Fetching JDBC Connection from DataSource
2024-06-27 01:34:32 - HikariPool-1 - Starting...
2024-06-27 01:34:33 - HikariPool-1 - Start completed.
2024-06-27 01:34:33 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:34:33 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:34:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:34:33 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:34:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:34:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:34:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:34:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:34:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:34:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:34:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:34:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:34:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:34:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:34:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:34:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 01:34:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:34:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:34:34 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 934 ms.
2024-06-27 01:34:34 - Fetching JDBC Connection from DataSource
2024-06-27 01:34:34 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:34:34 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:34:34 - 2 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung')
2024-06-27 01:34:34 - 2 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2)
2024-06-27 01:34:34 - 3 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2)
2024-06-27 01:34:34 - 2 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B')
2024-06-27 01:34:34 - 5 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown')
2024-06-27 01:34:34 - 5 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1)
2024-06-27 01:34:34 - 5 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), ()
2024-06-27 01:34:34 - 3 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2)
2024-06-27 01:34:34 - 5 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5)
2024-06-27 01:34:34 - 2 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2)
2024-06-27 01:34:34 - 5 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5)
2024-06-27 01:34:34 - 1 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description, customer_id) VALUES (1, '2023-06-01', 'Screen replacement', 1)
2024-06-27 01:34:34 - 3 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average')
2024-06-27 01:34:34 - 2 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2')
2024-06-27 01:34:34 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 83 ms.
2024-06-27 01:34:34 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:34:34 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:34:34 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:34:34 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:34:36 - alter table review add column content varchar(255)
2024-06-27 01:34:36 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:34:36 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:34:36 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:34:36 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:34:36 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:34:36 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:34:36 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:34:36 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:34:36 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:34:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:34:36 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:34:38 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@363e2009, org.springframework.security.web.context.SecurityContextPersistenceFilter@65a3d7c9, org.springframework.security.web.header.HeaderWriterFilter@7866fe3e, org.springframework.security.web.csrf.CsrfFilter@7c9c7e7d, org.springframework.security.web.authentication.logout.LogoutFilter@1fc4b8d6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@15af06f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30cb489a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3d67e3d3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b55fc83, org.springframework.security.web.session.SessionManagementFilter@6250d33c, org.springframework.security.web.access.ExceptionTranslationFilter@593e594f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4b3e4253]
2024-06-27 01:34:39 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:34:39 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:34:39 - Started StoreApplication in 10.353 seconds (JVM running for 11.236)
2024-06-27 01:34:43 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:34:43 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:34:43 - Completed initialization in 1 ms
2024-06-27 01:34:44 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [455] milliseconds.
2024-06-27 01:34:44 - No mapping for GET /css/styles.css
2024-06-27 01:34:44 - No mapping for GET /images/logo.png
2024-06-27 01:34:46 - No mapping for GET /static/css/styles.css
2024-06-27 01:34:46 - No mapping for GET /static/images/logo.png
2024-06-27 01:34:46 - No mapping for GET /favicon.ico
2024-06-27 01:34:46 - Fetching all stores
2024-06-27 01:34:46 - Setting JDBC Connection [HikariProxyConnection@180815355 wrapping com.mysql.cj.jdbc.ConnectionImpl@1a6dd872] read-only
2024-06-27 01:34:46 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:34:47 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@180815355 wrapping com.mysql.cj.jdbc.ConnectionImpl@1a6dd872]
2024-06-27 01:34:47 - No mapping for GET /static/css/styles.css
2024-06-27 01:36:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:36:25 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:36:25 - HikariPool-1 - Shutdown completed.
2024-06-27 01:38:11 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 37500 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:38:11 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:38:11 - No active profile set, falling back to default profiles: default
2024-06-27 01:38:12 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:38:15 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:38:15 - Finished Spring Data repository scanning in 264 ms. Found 14 JPA repository interfaces.
2024-06-27 01:38:17 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:38:17 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:38:17 - Starting service [Tomcat]
2024-06-27 01:38:17 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:38:17 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:38:17 - Root WebApplicationContext: initialization completed in 5478 ms
2024-06-27 01:38:17 - Fetching JDBC Connection from DataSource
2024-06-27 01:38:17 - HikariPool-1 - Starting...
2024-06-27 01:38:18 - HikariPool-1 - Start completed.
2024-06-27 01:38:18 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:38:18 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:38:18 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:38:18 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:38:18 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:38:19 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:38:19 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1314 ms.
2024-06-27 01:38:19 - Fetching JDBC Connection from DataSource
2024-06-27 01:38:19 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:38:19 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 01:38:19 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 01:38:19 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 97 ms.
2024-06-27 01:38:20 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:38:20 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:38:20 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:38:20 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:38:22 - alter table review add column content varchar(255)
2024-06-27 01:38:22 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:38:22 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:38:22 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:38:22 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:38:22 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:38:22 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:38:22 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:38:22 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:38:22 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:38:22 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:38:22 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:38:25 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11a0c708, org.springframework.security.web.context.SecurityContextPersistenceFilter@281028ce, org.springframework.security.web.header.HeaderWriterFilter@3d67e3d3, org.springframework.security.web.csrf.CsrfFilter@79735611, org.springframework.security.web.authentication.logout.LogoutFilter@f9979cf, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@a2ca681, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75caecf7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3cc2c4b8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30bfdcc5, org.springframework.security.web.session.SessionManagementFilter@795949fb, org.springframework.security.web.access.ExceptionTranslationFilter@7fa2473a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ae5d544]
2024-06-27 01:38:26 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:38:26 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:38:26 - Started StoreApplication in 15.077 seconds (JVM running for 15.787)
2024-06-27 01:38:29 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:38:29 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:38:29 - Completed initialization in 2 ms
2024-06-27 01:38:30 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [564] milliseconds.
2024-06-27 01:38:30 - No mapping for GET /css/styles.css
2024-06-27 01:38:30 - No mapping for GET /images/logo.png
2024-06-27 01:38:32 - No mapping for GET /static/css/styles.css
2024-06-27 01:38:32 - No mapping for GET /static/images/logo.png
2024-06-27 01:38:33 - Fetching all stores
2024-06-27 01:38:33 - Setting JDBC Connection [HikariProxyConnection@671330278 wrapping com.mysql.cj.jdbc.ConnectionImpl@2299baa3] read-only
2024-06-27 01:38:33 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:38:33 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:38:33 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@671330278 wrapping com.mysql.cj.jdbc.ConnectionImpl@2299baa3]
2024-06-27 01:38:33 - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "stores/list": Exception evaluating SpringEL expression: "'/stores?page=' + ${stores.number + 1} + '&size=' + ${stores.size} + '&sort=' + ${stores.sort.property} + '&order=' + ${stores.sort.direction}" (template: "stores/list" - line 26, col 34)
org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "'/stores?page=' + ${stores.number + 1} + '&size=' + ${stores.size} + '&sort=' + ${stores.sort.property} + '&order=' + ${stores.sort.direction}" (template: "stores/list" - line 26, col 34)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:374)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:315)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	... 95 common frames omitted
2024-06-27 01:38:33 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "'/stores?page=' + ${stores.number + 1} + '&size=' + ${stores.size} + '&sort=' + ${stores.sort.property} + '&order=' + ${stores.sort.direction}" (template: "stores/list" - line 26, col 34)] with root cause
org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:374)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:315)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-06-27 01:38:33 - No mapping for GET /css/styles.css
2024-06-27 01:38:37 - No mapping for GET /static/css/styles.css
2024-06-27 01:38:37 - No mapping for GET /static/images/logo.png
2024-06-27 01:38:37 - No mapping for GET /favicon.ico
2024-06-27 01:38:38 - Fetching all stores
2024-06-27 01:38:38 - Setting JDBC Connection [HikariProxyConnection@1679801138 wrapping com.mysql.cj.jdbc.ConnectionImpl@2299baa3] read-only
2024-06-27 01:38:38 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:38:38 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:38:38 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1679801138 wrapping com.mysql.cj.jdbc.ConnectionImpl@2299baa3]
2024-06-27 01:38:38 - [THYMELEAF][http-nio-8080-exec-7] Exception processing template "stores/list": Exception evaluating SpringEL expression: "'/stores?page=' + ${stores.number + 1} + '&size=' + ${stores.size} + '&sort=' + ${stores.sort.property} + '&order=' + ${stores.sort.direction}" (template: "stores/list" - line 26, col 34)
org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "'/stores?page=' + ${stores.number + 1} + '&size=' + ${stores.size} + '&sort=' + ${stores.sort.property} + '&order=' + ${stores.sort.direction}" (template: "stores/list" - line 26, col 34)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:592)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:374)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:315)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	... 95 common frames omitted
2024-06-27 01:38:38 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "'/stores?page=' + ${stores.number + 1} + '&size=' + ${stores.size} + '&sort=' + ${stores.sort.property} + '&order=' + ${stores.sort.direction}" (template: "stores/list" - line 26, col 34)] with root cause
org.springframework.expression.spel.SpelParseException: EL1041E: After parsing a valid expression, there is still more data in the expression: 'lcurly({)'
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:135)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:61)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:33)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:52)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:43)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:374)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:315)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:264)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:592)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-06-27 01:38:38 - No mapping for GET /css/styles.css
2024-06-27 01:40:07 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:40:07 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:40:07 - HikariPool-1 - Shutdown completed.
2024-06-27 01:41:34 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:41:34 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 43084 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:41:34 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:41:34 - No active profile set, falling back to default profiles: default
2024-06-27 01:41:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:41:36 - Finished Spring Data repository scanning in 218 ms. Found 14 JPA repository interfaces.
2024-06-27 01:41:37 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:41:38 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:41:38 - Starting service [Tomcat]
2024-06-27 01:41:38 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:41:38 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:41:38 - Root WebApplicationContext: initialization completed in 3978 ms
2024-06-27 01:41:38 - Fetching JDBC Connection from DataSource
2024-06-27 01:41:38 - HikariPool-1 - Starting...
2024-06-27 01:41:39 - HikariPool-1 - Start completed.
2024-06-27 01:41:39 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:41:39 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:41:39 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:41:39 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:41:39 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:41:39 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:41:39 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:41:39 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:41:39 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:41:39 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:41:39 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:41:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:41:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:41:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:41:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:41:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 01:41:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:41:40 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:41:40 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1290 ms.
2024-06-27 01:41:40 - Fetching JDBC Connection from DataSource
2024-06-27 01:41:40 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:41:40 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 01:41:40 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 01:41:40 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 109 ms.
2024-06-27 01:41:40 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:41:40 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:41:41 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:41:41 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:41:42 - alter table review add column content varchar(255)
2024-06-27 01:41:43 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:41:43 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:41:43 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:41:43 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:41:43 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:41:43 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:41:43 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:41:43 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:41:43 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:41:43 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:41:43 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:41:45 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6491006, org.springframework.security.web.context.SecurityContextPersistenceFilter@951461a, org.springframework.security.web.header.HeaderWriterFilter@3eadfbbb, org.springframework.security.web.csrf.CsrfFilter@3b7dd173, org.springframework.security.web.authentication.logout.LogoutFilter@5abc488d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5980e29f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@307e9c02, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73072745, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42fb2be9, org.springframework.security.web.session.SessionManagementFilter@7c9c7e7d, org.springframework.security.web.access.ExceptionTranslationFilter@1677f98b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3df54fd5]
2024-06-27 01:41:46 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:41:46 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:41:46 - Started StoreApplication in 13.097 seconds (JVM running for 13.993)
2024-06-27 01:41:47 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:41:47 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:41:47 - Completed initialization in 1 ms
2024-06-27 01:41:48 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [505] milliseconds.
2024-06-27 01:41:51 - No mapping for GET /css/styles.css
2024-06-27 01:41:51 - No mapping for GET /images/logo.png
2024-06-27 01:41:52 - No mapping for GET /static/css/styles.css
2024-06-27 01:41:52 - No mapping for GET /static/images/logo.png
2024-06-27 01:41:53 - Fetching all stores
2024-06-27 01:41:53 - Setting JDBC Connection [HikariProxyConnection@1581951810 wrapping com.mysql.cj.jdbc.ConnectionImpl@1749739b] read-only
2024-06-27 01:41:53 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:41:53 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:41:53 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1581951810 wrapping com.mysql.cj.jdbc.ConnectionImpl@1749739b]
2024-06-27 01:41:53 - [THYMELEAF][http-nio-8080-exec-9] Exception processing template "stores/list": Exception evaluating SpringEL expression: "stores.sort.property" (template: "stores/list" - line 25, col 32)
org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "stores.sort.property" (template: "stores/list" - line 25, col 32)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:96)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'property' cannot be found on object of type 'org.springframework.data.domain.Sort' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 100 common frames omitted
2024-06-27 01:41:53 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "stores.sort.property" (template: "stores/list" - line 25, col 32)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'property' cannot be found on object of type 'org.springframework.data.domain.Sort' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:96)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-06-27 01:41:53 - No mapping for GET /css/styles.css
2024-06-27 01:41:53 - No mapping for GET /favicon.ico
2024-06-27 01:45:07 - No mapping for GET /static/css/styles.css
2024-06-27 01:45:07 - No mapping for GET /static/images/logo.png
2024-06-27 01:45:07 - No mapping for GET /favicon.ico
2024-06-27 01:45:08 - Fetching all stores
2024-06-27 01:45:08 - Setting JDBC Connection [HikariProxyConnection@1098657002 wrapping com.mysql.cj.jdbc.ConnectionImpl@1749739b] read-only
2024-06-27 01:45:08 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:45:08 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:45:08 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1098657002 wrapping com.mysql.cj.jdbc.ConnectionImpl@1749739b]
2024-06-27 01:45:08 - [THYMELEAF][http-nio-8080-exec-7] Exception processing template "stores/list": Exception evaluating SpringEL expression: "stores.sort.property" (template: "stores/list" - line 25, col 32)
org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "stores.sort.property" (template: "stores/list" - line 25, col 32)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:96)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:592)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'property' cannot be found on object of type 'org.springframework.data.domain.Sort' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 100 common frames omitted
2024-06-27 01:45:08 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "stores.sort.property" (template: "stores/list" - line 25, col 32)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'property' cannot be found on object of type 'org.springframework.data.domain.Sort' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:96)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.AdditionExpression.executeAddition(AdditionExpression.java:89)
	at org.thymeleaf.standard.expression.ComplexExpression.executeComplex(ComplexExpression.java:62)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:112)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:592)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-06-27 01:45:08 - No mapping for GET /css/styles.css
2024-06-27 01:45:08 - No mapping for GET /favicon.ico
2024-06-27 01:45:10 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:45:10 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:45:10 - HikariPool-1 - Shutdown completed.
2024-06-27 01:45:31 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:45:31 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 41196 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:45:31 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:45:31 - No active profile set, falling back to default profiles: default
2024-06-27 01:45:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:45:33 - Finished Spring Data repository scanning in 198 ms. Found 14 JPA repository interfaces.
2024-06-27 01:45:35 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:45:35 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:45:35 - Starting service [Tomcat]
2024-06-27 01:45:35 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:45:35 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:45:35 - Root WebApplicationContext: initialization completed in 3889 ms
2024-06-27 01:45:35 - Fetching JDBC Connection from DataSource
2024-06-27 01:45:35 - HikariPool-1 - Starting...
2024-06-27 01:45:35 - HikariPool-1 - Start completed.
2024-06-27 01:45:35 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:45:35 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:45:35 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:45:36 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:45:36 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:45:36 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:45:36 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 876 ms.
2024-06-27 01:45:36 - Fetching JDBC Connection from DataSource
2024-06-27 01:45:36 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:45:36 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 01:45:36 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 01:45:36 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 69 ms.
2024-06-27 01:45:37 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:45:37 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:45:37 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:45:37 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:45:38 - alter table review add column content varchar(255)
2024-06-27 01:45:38 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:45:39 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:45:39 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:45:39 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:45:39 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:45:39 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:45:39 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:45:39 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:45:39 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:45:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:45:39 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:45:41 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@178c4480, org.springframework.security.web.context.SecurityContextPersistenceFilter@7f1b2f07, org.springframework.security.web.header.HeaderWriterFilter@51b2b3e6, org.springframework.security.web.csrf.CsrfFilter@5f6ba085, org.springframework.security.web.authentication.logout.LogoutFilter@7866fe3e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@49994a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@399a5a52, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f0e7008, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5746609e, org.springframework.security.web.session.SessionManagementFilter@202fd4c4, org.springframework.security.web.access.ExceptionTranslationFilter@3f67f5ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4bba2704]
2024-06-27 01:45:41 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:45:41 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:45:41 - Started StoreApplication in 11.669 seconds (JVM running for 12.61)
2024-06-27 01:45:46 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:45:46 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:45:46 - Completed initialization in 1 ms
2024-06-27 01:45:47 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [373] milliseconds.
2024-06-27 01:45:49 - No mapping for GET /css/styles.css
2024-06-27 01:45:49 - No mapping for GET /images/logo.png
2024-06-27 01:45:50 - No mapping for GET /static/css/styles.css
2024-06-27 01:45:50 - No mapping for GET /static/images/logo.png
2024-06-27 01:45:51 - Fetching all stores
2024-06-27 01:45:51 - Setting JDBC Connection [HikariProxyConnection@890783205 wrapping com.mysql.cj.jdbc.ConnectionImpl@608a6bb] read-only
2024-06-27 01:45:51 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:45:51 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:45:51 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@890783205 wrapping com.mysql.cj.jdbc.ConnectionImpl@608a6bb]
2024-06-27 01:45:51 - [THYMELEAF][http-nio-8080-exec-8] Exception processing template "stores/list": Exception evaluating SpringEL expression: "stores.sort.direction" (template: "stores/list" - line 25, col 34)
org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "stores.sort.direction" (template: "stores/list" - line 25, col 34)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:339)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:285)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'direction' cannot be found on object of type 'org.springframework.data.domain.Sort' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 96 common frames omitted
2024-06-27 01:45:51 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "stores.sort.direction" (template: "stores/list" - line 25, col 34)] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'direction' cannot be found on object of type 'org.springframework.data.domain.Sort' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:337)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.LinkExpression.resolveParameters(LinkExpression.java:339)
	at org.thymeleaf.standard.expression.LinkExpression.executeLinkExpression(LinkExpression.java:285)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:85)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-06-27 01:45:51 - No mapping for GET /css/styles.css
2024-06-27 01:46:04 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:46:04 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:46:04 - HikariPool-1 - Shutdown completed.
2024-06-27 01:49:15 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 3876 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:49:15 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:49:15 - No active profile set, falling back to default profiles: default
2024-06-27 01:49:15 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:49:17 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:49:17 - Finished Spring Data repository scanning in 189 ms. Found 14 JPA repository interfaces.
2024-06-27 01:49:19 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:49:19 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:49:19 - Starting service [Tomcat]
2024-06-27 01:49:19 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:49:19 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:49:19 - Root WebApplicationContext: initialization completed in 3869 ms
2024-06-27 01:49:19 - Fetching JDBC Connection from DataSource
2024-06-27 01:49:19 - HikariPool-1 - Starting...
2024-06-27 01:49:20 - HikariPool-1 - Start completed.
2024-06-27 01:49:20 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:49:20 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:49:20 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:49:20 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:49:20 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:49:21 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 01:49:21 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:49:21 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:49:21 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 826 ms.
2024-06-27 01:49:21 - Fetching JDBC Connection from DataSource
2024-06-27 01:49:21 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:49:21 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 01:49:21 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 01:49:21 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 80 ms.
2024-06-27 01:49:21 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:49:21 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:49:21 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:49:21 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:49:23 - alter table review add column content varchar(255)
2024-06-27 01:49:23 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:49:23 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:49:23 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:49:23 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:49:23 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:49:23 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:49:23 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:49:23 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:49:23 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:49:23 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:49:23 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:49:25 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@389a9ff6, org.springframework.security.web.context.SecurityContextPersistenceFilter@3a1e5fa7, org.springframework.security.web.header.HeaderWriterFilter@79735611, org.springframework.security.web.csrf.CsrfFilter@399a5a52, org.springframework.security.web.authentication.logout.LogoutFilter@6e5a77ef, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b3e4253, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@498f1f63, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5abc488d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@15af06f, org.springframework.security.web.session.SessionManagementFilter@4d2f8ee7, org.springframework.security.web.access.ExceptionTranslationFilter@73072745, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5c648e38]
2024-06-27 01:49:25 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:49:25 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:49:25 - Started StoreApplication in 11.419 seconds (JVM running for 12.068)
2024-06-27 01:49:30 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:49:30 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:49:30 - Completed initialization in 1 ms
2024-06-27 01:49:30 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [398] milliseconds.
2024-06-27 01:49:33 - No mapping for GET /css/styles.css
2024-06-27 01:49:33 - No mapping for GET /images/logo.png
2024-06-27 01:49:34 - No mapping for GET /static/css/styles.css
2024-06-27 01:49:34 - No mapping for GET /static/images/logo.png
2024-06-27 01:49:34 - No mapping for GET /favicon.ico
2024-06-27 01:49:35 - Fetching all stores
2024-06-27 01:49:35 - Setting JDBC Connection [HikariProxyConnection@426799548 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cdfbc2c] read-only
2024-06-27 01:49:35 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:49:35 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:49:35 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@426799548 wrapping com.mysql.cj.jdbc.ConnectionImpl@3cdfbc2c]
2024-06-27 01:49:35 - No mapping for GET /css/styles.css
2024-06-27 01:50:18 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:50:18 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:50:18 - HikariPool-1 - Shutdown completed.
2024-06-27 01:50:41 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:50:41 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 44108 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:50:41 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:50:41 - No active profile set, falling back to default profiles: default
2024-06-27 01:50:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:50:43 - Finished Spring Data repository scanning in 185 ms. Found 14 JPA repository interfaces.
2024-06-27 01:50:44 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:50:44 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:50:44 - Starting service [Tomcat]
2024-06-27 01:50:44 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:50:45 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:50:45 - Root WebApplicationContext: initialization completed in 3482 ms
2024-06-27 01:50:45 - Fetching JDBC Connection from DataSource
2024-06-27 01:50:45 - HikariPool-1 - Starting...
2024-06-27 01:50:45 - HikariPool-1 - Start completed.
2024-06-27 01:50:45 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:50:45 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:50:45 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:50:45 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:50:45 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:50:45 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:50:45 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:50:45 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:50:45 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:50:45 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:50:45 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:50:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:50:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:50:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:50:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:50:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:50:46 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 01:50:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:50:47 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:50:47 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1283 ms.
2024-06-27 01:50:47 - Fetching JDBC Connection from DataSource
2024-06-27 01:50:47 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:50:47 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 01:50:47 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 01:50:47 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 92 ms.
2024-06-27 01:50:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:50:47 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:50:47 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:50:47 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:50:48 - alter table review add column content varchar(255)
2024-06-27 01:50:49 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:50:49 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:50:49 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:50:49 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:50:49 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:50:49 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:50:49 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:50:49 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:50:49 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:50:49 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:50:49 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:50:51 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6491006, org.springframework.security.web.context.SecurityContextPersistenceFilter@951461a, org.springframework.security.web.header.HeaderWriterFilter@3eadfbbb, org.springframework.security.web.csrf.CsrfFilter@3b7dd173, org.springframework.security.web.authentication.logout.LogoutFilter@5abc488d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5980e29f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@307e9c02, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73072745, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42fb2be9, org.springframework.security.web.session.SessionManagementFilter@7c9c7e7d, org.springframework.security.web.access.ExceptionTranslationFilter@1677f98b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3df54fd5]
2024-06-27 01:50:52 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:50:53 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:50:53 - Started StoreApplication in 12.417 seconds (JVM running for 13.067)
2024-06-27 01:51:03 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:51:03 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:51:03 - Completed initialization in 3 ms
2024-06-27 01:51:03 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [401] milliseconds.
2024-06-27 01:51:04 - No mapping for GET /css/styles.css
2024-06-27 01:51:04 - No mapping for GET /images/logo.png
2024-06-27 01:51:05 - No mapping for GET /static/css/styles.css
2024-06-27 01:51:05 - No mapping for GET /static/images/logo.png
2024-06-27 01:51:05 - No mapping for GET /favicon.ico
2024-06-27 01:51:06 - Fetching all stores
2024-06-27 01:51:06 - Setting JDBC Connection [HikariProxyConnection@820905004 wrapping com.mysql.cj.jdbc.ConnectionImpl@69a2d88d] read-only
2024-06-27 01:51:06 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:51:06 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:51:06 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@820905004 wrapping com.mysql.cj.jdbc.ConnectionImpl@69a2d88d]
2024-06-27 01:51:06 - No mapping for GET /css/styles.css
2024-06-27 01:51:38 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:51:38 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:51:38 - HikariPool-1 - Shutdown completed.
2024-06-27 01:52:16 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 35908 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:52:16 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:52:16 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:52:16 - No active profile set, falling back to default profiles: default
2024-06-27 01:52:19 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:52:19 - Finished Spring Data repository scanning in 248 ms. Found 14 JPA repository interfaces.
2024-06-27 01:52:21 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:52:21 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:52:21 - Starting service [Tomcat]
2024-06-27 01:52:21 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:52:21 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:52:21 - Root WebApplicationContext: initialization completed in 4448 ms
2024-06-27 01:52:21 - Fetching JDBC Connection from DataSource
2024-06-27 01:52:21 - HikariPool-1 - Starting...
2024-06-27 01:52:22 - HikariPool-1 - Start completed.
2024-06-27 01:52:22 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:52:22 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:52:22 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:52:22 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:52:22 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:52:22 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:52:22 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:52:22 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:52:22 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:52:22 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:52:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:52:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:52:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:52:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:52:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:52:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 01:52:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:52:23 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:52:23 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1054 ms.
2024-06-27 01:52:23 - Fetching JDBC Connection from DataSource
2024-06-27 01:52:23 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:52:23 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 01:52:23 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 01:52:23 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 106 ms.
2024-06-27 01:52:23 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:52:23 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:52:23 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:52:24 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:52:25 - alter table review add column content varchar(255)
2024-06-27 01:52:25 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:52:25 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:52:25 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:52:25 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:52:25 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:52:25 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:52:25 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:52:25 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:52:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:52:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:52:26 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:52:28 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e733bb5, org.springframework.security.web.context.SecurityContextPersistenceFilter@73072745, org.springframework.security.web.header.HeaderWriterFilter@73483d4b, org.springframework.security.web.csrf.CsrfFilter@51b2b3e6, org.springframework.security.web.authentication.logout.LogoutFilter@46ef7340, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1a67bde5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@79735611, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a7b4bb6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@669e730d, org.springframework.security.web.session.SessionManagementFilter@67eabe02, org.springframework.security.web.access.ExceptionTranslationFilter@6bc08a77, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@42fb2be9]
2024-06-27 01:52:29 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:52:29 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:52:29 - Started StoreApplication in 13.632 seconds (JVM running for 14.66)
2024-06-27 01:52:32 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:52:32 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:52:32 - Completed initialization in 1 ms
2024-06-27 01:52:33 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [459] milliseconds.
2024-06-27 01:52:36 - No mapping for GET /css/styles.css
2024-06-27 01:52:36 - No mapping for GET /images/logo.png
2024-06-27 01:52:38 - No mapping for GET /static/css/styles.css
2024-06-27 01:52:38 - No mapping for GET /static/images/logo.png
2024-06-27 01:52:38 - No mapping for GET /favicon.ico
2024-06-27 01:52:38 - Fetching all stores
2024-06-27 01:52:38 - Setting JDBC Connection [HikariProxyConnection@87588519 wrapping com.mysql.cj.jdbc.ConnectionImpl@6c4b4934] read-only
2024-06-27 01:52:38 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:52:38 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:52:38 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@87588519 wrapping com.mysql.cj.jdbc.ConnectionImpl@6c4b4934]
2024-06-27 01:52:39 - No mapping for GET /css/styles.css
2024-06-27 01:53:32 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:53:32 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:53:32 - HikariPool-1 - Shutdown completed.
2024-06-27 01:53:48 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:53:48 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 9324 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:53:48 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:53:48 - No active profile set, falling back to default profiles: default
2024-06-27 01:53:50 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:53:50 - Finished Spring Data repository scanning in 174 ms. Found 14 JPA repository interfaces.
2024-06-27 01:53:52 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:53:52 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:53:52 - Starting service [Tomcat]
2024-06-27 01:53:52 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:53:52 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:53:52 - Root WebApplicationContext: initialization completed in 3426 ms
2024-06-27 01:53:52 - Fetching JDBC Connection from DataSource
2024-06-27 01:53:52 - HikariPool-1 - Starting...
2024-06-27 01:53:52 - HikariPool-1 - Start completed.
2024-06-27 01:53:52 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:53:53 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:53:53 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:53:53 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:53:53 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:53:53 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 944 ms.
2024-06-27 01:53:53 - Fetching JDBC Connection from DataSource
2024-06-27 01:53:53 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:53:53 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:53:53 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 01:53:53 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 01:53:53 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 01:53:53 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 01:53:53 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 01:53:53 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 01:53:53 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 01:53:53 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 01:53:53 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 01:53:54 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 01:53:54 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 01:53:54 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 01:53:54 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 01:53:54 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 01:53:54 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 82 ms.
2024-06-27 01:53:54 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:53:54 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:53:54 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:53:54 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:53:55 - alter table review add column content varchar(255)
2024-06-27 01:53:55 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:53:56 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:53:56 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:53:56 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:53:56 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:53:56 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:53:56 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:53:56 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:53:56 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:53:56 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:53:56 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:53:58 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@18f794e, org.springframework.security.web.context.SecurityContextPersistenceFilter@593e594f, org.springframework.security.web.header.HeaderWriterFilter@4bdbfbc6, org.springframework.security.web.csrf.CsrfFilter@674d2b8b, org.springframework.security.web.authentication.logout.LogoutFilter@3013e1e8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@669e730d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7866fe3e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3b7b099b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@389a9ff6, org.springframework.security.web.session.SessionManagementFilter@758ac46, org.springframework.security.web.access.ExceptionTranslationFilter@4197e859, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1a67bde5]
2024-06-27 01:53:59 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:53:59 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:53:59 - Started StoreApplication in 11.317 seconds (JVM running for 12.08)
2024-06-27 01:54:05 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:54:05 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:54:05 - Completed initialization in 1 ms
2024-06-27 01:54:05 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [396] milliseconds.
2024-06-27 01:54:07 - No mapping for GET /css/styles.css
2024-06-27 01:54:07 - No mapping for GET /images/logo.png
2024-06-27 01:54:08 - No mapping for GET /static/css/styles.css
2024-06-27 01:54:08 - No mapping for GET /static/images/logo.png
2024-06-27 01:54:09 - Fetching all stores
2024-06-27 01:54:09 - Setting JDBC Connection [HikariProxyConnection@2062705821 wrapping com.mysql.cj.jdbc.ConnectionImpl@79ffd561] read-only
2024-06-27 01:54:09 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:54:09 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:54:09 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2062705821 wrapping com.mysql.cj.jdbc.ConnectionImpl@79ffd561]
2024-06-27 01:54:09 - No mapping for GET /css/styles.css
2024-06-27 01:54:09 - No mapping for GET /images/logo.png
2024-06-27 01:54:10 - Fetching all stores
2024-06-27 01:54:10 - Setting JDBC Connection [HikariProxyConnection@702492771 wrapping com.mysql.cj.jdbc.ConnectionImpl@79ffd561] read-only
2024-06-27 01:54:10 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.name asc limit ?
2024-06-27 01:54:10 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:54:10 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@702492771 wrapping com.mysql.cj.jdbc.ConnectionImpl@79ffd561]
2024-06-27 01:54:10 - No mapping for GET /css/styles.css
2024-06-27 01:54:10 - No mapping for GET /images/logo.png
2024-06-27 01:54:10 - No mapping for GET /favicon.ico
2024-06-27 01:54:13 - Fetching all stores
2024-06-27 01:54:13 - Setting JDBC Connection [HikariProxyConnection@59913072 wrapping com.mysql.cj.jdbc.ConnectionImpl@79ffd561] read-only
2024-06-27 01:54:13 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:54:13 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:54:13 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@59913072 wrapping com.mysql.cj.jdbc.ConnectionImpl@79ffd561]
2024-06-27 01:54:13 - No mapping for GET /css/styles.css
2024-06-27 01:54:13 - No mapping for GET /images/logo.png
2024-06-27 01:54:16 - Fetching all stores
2024-06-27 01:54:16 - Setting JDBC Connection [HikariProxyConnection@944400407 wrapping com.mysql.cj.jdbc.ConnectionImpl@79ffd561] read-only
2024-06-27 01:54:16 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.name asc limit ?
2024-06-27 01:54:16 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:54:16 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@944400407 wrapping com.mysql.cj.jdbc.ConnectionImpl@79ffd561]
2024-06-27 01:54:16 - No mapping for GET /css/styles.css
2024-06-27 01:54:16 - No mapping for GET /images/logo.png
2024-06-27 01:54:16 - No mapping for GET /favicon.ico
2024-06-27 01:54:17 - Fetching all stores
2024-06-27 01:54:17 - Setting JDBC Connection [HikariProxyConnection@339976409 wrapping com.mysql.cj.jdbc.ConnectionImpl@79ffd561] read-only
2024-06-27 01:54:17 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:54:17 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:54:17 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@339976409 wrapping com.mysql.cj.jdbc.ConnectionImpl@79ffd561]
2024-06-27 01:54:17 - No mapping for GET /css/styles.css
2024-06-27 01:54:17 - No mapping for GET /images/logo.png
2024-06-27 01:54:17 - No mapping for GET /static/css/styles.css
2024-06-27 01:54:17 - No mapping for GET /static/images/logo.png
2024-06-27 01:56:29 - No mapping for GET /css/styles.css
2024-06-27 01:56:29 - No mapping for GET /images/logo.png
2024-06-27 01:56:29 - No mapping for GET /favicon.ico
2024-06-27 01:56:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:56:31 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:56:31 - HikariPool-1 - Shutdown completed.
2024-06-27 01:56:50 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:56:50 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 44260 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:56:50 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:56:50 - No active profile set, falling back to default profiles: default
2024-06-27 01:56:52 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:56:52 - Finished Spring Data repository scanning in 286 ms. Found 14 JPA repository interfaces.
2024-06-27 01:56:54 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:56:54 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:56:54 - Starting service [Tomcat]
2024-06-27 01:56:54 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:56:54 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:56:54 - Root WebApplicationContext: initialization completed in 3878 ms
2024-06-27 01:56:54 - Fetching JDBC Connection from DataSource
2024-06-27 01:56:54 - HikariPool-1 - Starting...
2024-06-27 01:56:55 - HikariPool-1 - Start completed.
2024-06-27 01:56:55 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:56:55 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:56:55 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:56:55 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:56:55 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:56:55 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:56:55 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:56:55 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:56:55 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:56:55 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:56:55 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:56:56 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:56:56 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:56:56 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:56:56 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:56:56 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 01:56:56 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:56:56 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:56:56 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1118 ms.
2024-06-27 01:56:56 - Fetching JDBC Connection from DataSource
2024-06-27 01:56:56 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:56:56 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 01:56:56 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 01:56:56 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 73 ms.
2024-06-27 01:56:56 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:56:56 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:56:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:56:57 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:56:58 - alter table review add column content varchar(255)
2024-06-27 01:56:58 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:56:58 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:56:58 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:56:58 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:56:58 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:56:58 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:56:58 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:56:58 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:56:58 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:56:58 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:56:59 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:57:00 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6491006, org.springframework.security.web.context.SecurityContextPersistenceFilter@7c9c7e7d, org.springframework.security.web.header.HeaderWriterFilter@1677f98b, org.springframework.security.web.csrf.CsrfFilter@6889e714, org.springframework.security.web.authentication.logout.LogoutFilter@401d83ce, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5980e29f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@951461a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67eabe02, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@42fb2be9, org.springframework.security.web.session.SessionManagementFilter@3eadfbbb, org.springframework.security.web.access.ExceptionTranslationFilter@674d2b8b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3df54fd5]
2024-06-27 01:57:01 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:57:01 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:57:01 - Started StoreApplication in 12.026 seconds (JVM running for 12.913)
2024-06-27 01:57:03 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:57:03 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:57:03 - Completed initialization in 1 ms
2024-06-27 01:57:03 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [431] milliseconds.
2024-06-27 01:57:07 - No mapping for GET /css/styles.css
2024-06-27 01:57:07 - No mapping for GET /images/logo.png
2024-06-27 01:57:08 - No mapping for GET /static/css/styles.css
2024-06-27 01:57:08 - No mapping for GET /static/images/logo.png
2024-06-27 01:58:17 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:58:17 - HikariPool-1 - Shutdown initiated...
2024-06-27 01:58:17 - HikariPool-1 - Shutdown completed.
2024-06-27 01:58:41 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 01:58:41 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 37588 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 01:58:41 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 01:58:41 - No active profile set, falling back to default profiles: default
2024-06-27 01:58:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 01:58:43 - Finished Spring Data repository scanning in 169 ms. Found 14 JPA repository interfaces.
2024-06-27 01:58:45 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 01:58:45 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 01:58:45 - Starting service [Tomcat]
2024-06-27 01:58:45 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 01:58:45 - Initializing Spring embedded WebApplicationContext
2024-06-27 01:58:45 - Root WebApplicationContext: initialization completed in 3931 ms
2024-06-27 01:58:45 - Fetching JDBC Connection from DataSource
2024-06-27 01:58:45 - HikariPool-1 - Starting...
2024-06-27 01:58:46 - HikariPool-1 - Start completed.
2024-06-27 01:58:46 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 01:58:46 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 01:58:46 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 01:58:46 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 01:58:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:58:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:58:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 01:58:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:58:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 01:58:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:58:46 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 01:58:47 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 01:58:47 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:58:47 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 01:58:47 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 01:58:47 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 01:58:47 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 01:58:47 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 01:58:47 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1009 ms.
2024-06-27 01:58:47 - Fetching JDBC Connection from DataSource
2024-06-27 01:58:47 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 01:58:47 - 0 returned as update count for SQL: USE phonestore
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 01:58:47 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 01:58:47 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 89 ms.
2024-06-27 01:58:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 01:58:47 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 01:58:48 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 01:58:48 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 01:58:49 - alter table review add column content varchar(255)
2024-06-27 01:58:49 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 01:58:49 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 01:58:49 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 01:58:49 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 01:58:49 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 01:58:49 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 01:58:49 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 01:58:49 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 01:58:50 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 01:58:50 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 01:58:50 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 01:58:52 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42fb2be9, org.springframework.security.web.context.SecurityContextPersistenceFilter@2f0e7008, org.springframework.security.web.header.HeaderWriterFilter@550e7ef6, org.springframework.security.web.csrf.CsrfFilter@7552f05b, org.springframework.security.web.authentication.logout.LogoutFilter@30d944d8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2cdd156b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@682270ff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4bdbfbc6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54816d7a, org.springframework.security.web.session.SessionManagementFilter@58701e8c, org.springframework.security.web.access.ExceptionTranslationFilter@30b29f55, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5ff8d76f]
2024-06-27 01:58:52 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 01:58:52 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 01:58:52 - Started StoreApplication in 12.214 seconds (JVM running for 12.866)
2024-06-27 01:58:53 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 01:58:53 - Initializing Servlet 'dispatcherServlet'
2024-06-27 01:58:53 - Completed initialization in 2 ms
2024-06-27 01:58:54 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [249] milliseconds.
2024-06-27 01:58:54 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [541] milliseconds.
2024-06-27 01:58:56 - No mapping for GET /images/logo.png
2024-06-27 01:58:57 - No mapping for GET /static/images/logo.png
2024-06-27 01:58:58 - Fetching all stores
2024-06-27 01:58:58 - Setting JDBC Connection [HikariProxyConnection@1889093309 wrapping com.mysql.cj.jdbc.ConnectionImpl@54769fff] read-only
2024-06-27 01:58:58 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 01:58:58 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 01:58:58 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1889093309 wrapping com.mysql.cj.jdbc.ConnectionImpl@54769fff]
2024-06-27 01:58:58 - No mapping for GET /images/logo.png
2024-06-27 02:00:18 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:00:18 - HikariPool-1 - Shutdown initiated...
2024-06-27 02:00:18 - HikariPool-1 - Shutdown completed.
2024-06-27 02:01:08 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 6292 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 02:01:08 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 02:01:08 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 02:01:08 - No active profile set, falling back to default profiles: default
2024-06-27 02:01:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 02:01:10 - Finished Spring Data repository scanning in 250 ms. Found 14 JPA repository interfaces.
2024-06-27 02:01:12 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 02:01:12 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 02:01:12 - Starting service [Tomcat]
2024-06-27 02:01:12 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 02:01:12 - Initializing Spring embedded WebApplicationContext
2024-06-27 02:01:12 - Root WebApplicationContext: initialization completed in 4011 ms
2024-06-27 02:01:12 - Fetching JDBC Connection from DataSource
2024-06-27 02:01:12 - HikariPool-1 - Starting...
2024-06-27 02:01:13 - HikariPool-1 - Start completed.
2024-06-27 02:01:13 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 02:01:13 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 02:01:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 02:01:13 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 02:01:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:01:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:01:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 02:01:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:01:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:01:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:01:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 02:01:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:01:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:01:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:01:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:01:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 02:01:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 02:01:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 02:01:14 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1034 ms.
2024-06-27 02:01:14 - Fetching JDBC Connection from DataSource
2024-06-27 02:01:14 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 02:01:14 - 0 returned as update count for SQL: USE phonestore
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 02:01:14 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 02:01:14 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 74 ms.
2024-06-27 02:01:14 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 02:01:14 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 02:01:14 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 02:01:14 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 02:01:16 - alter table review add column content varchar(255)
2024-06-27 02:01:16 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 02:01:16 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 02:01:16 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 02:01:16 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 02:01:16 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 02:01:16 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 02:01:16 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 02:01:16 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 02:01:16 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 02:01:16 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:01:16 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 02:01:18 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1e733bb5, org.springframework.security.web.context.SecurityContextPersistenceFilter@67eabe02, org.springframework.security.web.header.HeaderWriterFilter@6bc08a77, org.springframework.security.web.csrf.CsrfFilter@3f67f5ff, org.springframework.security.web.authentication.logout.LogoutFilter@2aeb3f3b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1a67bde5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@73072745, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@498f1f63, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@669e730d, org.springframework.security.web.session.SessionManagementFilter@73483d4b, org.springframework.security.web.access.ExceptionTranslationFilter@307e9c02, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@42fb2be9]
2024-06-27 02:01:19 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 02:01:19 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 02:01:19 - Started StoreApplication in 11.866 seconds (JVM running for 12.596)
2024-06-27 02:01:25 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 02:01:25 - Initializing Servlet 'dispatcherServlet'
2024-06-27 02:01:25 - Completed initialization in 1 ms
2024-06-27 02:01:26 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [197] milliseconds.
2024-06-27 02:01:26 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [430] milliseconds.
2024-06-27 02:01:43 - No mapping for GET /images/logo.png
2024-06-27 02:01:45 - No mapping for GET /static/images/logo.png
2024-06-27 02:01:45 - Fetching all stores
2024-06-27 02:01:45 - Setting JDBC Connection [HikariProxyConnection@821140395 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ddc88f2] read-only
2024-06-27 02:01:46 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 02:01:46 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 02:01:46 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@821140395 wrapping com.mysql.cj.jdbc.ConnectionImpl@6ddc88f2]
2024-06-27 02:01:46 - No mapping for GET /images/logo.png
2024-06-27 02:01:46 - No mapping for GET /favicon.ico
2024-06-27 02:01:48 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:01:48 - HikariPool-1 - Shutdown initiated...
2024-06-27 02:01:48 - HikariPool-1 - Shutdown completed.
2024-06-27 02:02:09 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 02:02:09 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 41112 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 02:02:09 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 02:02:09 - No active profile set, falling back to default profiles: default
2024-06-27 02:02:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 02:02:10 - Finished Spring Data repository scanning in 177 ms. Found 14 JPA repository interfaces.
2024-06-27 02:02:12 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 02:02:12 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 02:02:12 - Starting service [Tomcat]
2024-06-27 02:02:12 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 02:02:12 - Initializing Spring embedded WebApplicationContext
2024-06-27 02:02:12 - Root WebApplicationContext: initialization completed in 3647 ms
2024-06-27 02:02:13 - Fetching JDBC Connection from DataSource
2024-06-27 02:02:13 - HikariPool-1 - Starting...
2024-06-27 02:02:13 - HikariPool-1 - Start completed.
2024-06-27 02:02:13 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 02:02:13 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 02:02:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 02:02:13 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 02:02:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:02:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 02:02:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 02:02:14 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 880 ms.
2024-06-27 02:02:14 - Fetching JDBC Connection from DataSource
2024-06-27 02:02:14 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 02:02:14 - 0 returned as update count for SQL: USE phonestore
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 02:02:14 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 02:02:14 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 74 ms.
2024-06-27 02:02:14 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 02:02:14 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 02:02:14 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 02:02:15 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 02:02:16 - alter table review add column content varchar(255)
2024-06-27 02:02:16 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 02:02:16 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 02:02:16 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 02:02:16 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 02:02:16 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 02:02:16 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 02:02:16 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 02:02:16 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 02:02:16 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 02:02:16 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:02:17 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 02:02:18 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3df54fd5, org.springframework.security.web.context.SecurityContextPersistenceFilter@7f1b2f07, org.springframework.security.web.header.HeaderWriterFilter@51b2b3e6, org.springframework.security.web.csrf.CsrfFilter@5f6ba085, org.springframework.security.web.authentication.logout.LogoutFilter@7866fe3e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3ef04239, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@399a5a52, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f0e7008, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ff8d76f, org.springframework.security.web.session.SessionManagementFilter@202fd4c4, org.springframework.security.web.access.ExceptionTranslationFilter@3f67f5ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@344acc03]
2024-06-27 02:02:19 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 02:02:19 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 02:02:19 - Started StoreApplication in 11.189 seconds (JVM running for 11.975)
2024-06-27 02:02:23 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 02:02:23 - Initializing Servlet 'dispatcherServlet'
2024-06-27 02:02:23 - Completed initialization in 1 ms
2024-06-27 02:02:24 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [547] milliseconds.
2024-06-27 02:02:24 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [291] milliseconds.
2024-06-27 02:04:59 - No mapping for GET /images/logo.png
2024-06-27 02:05:00 - No mapping for GET /static/images/logo.png
2024-06-27 02:05:00 - No mapping for GET /favicon.ico
2024-06-27 02:05:02 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:05:02 - HikariPool-1 - Shutdown initiated...
2024-06-27 02:05:02 - HikariPool-1 - Shutdown completed.
2024-06-27 02:05:45 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 02:05:46 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 10132 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 02:05:46 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 02:05:46 - No active profile set, falling back to default profiles: default
2024-06-27 02:05:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 02:05:47 - Finished Spring Data repository scanning in 185 ms. Found 14 JPA repository interfaces.
2024-06-27 02:05:49 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 02:05:49 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 02:05:49 - Starting service [Tomcat]
2024-06-27 02:05:49 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 02:05:49 - Initializing Spring embedded WebApplicationContext
2024-06-27 02:05:49 - Root WebApplicationContext: initialization completed in 3427 ms
2024-06-27 02:05:49 - Fetching JDBC Connection from DataSource
2024-06-27 02:05:49 - HikariPool-1 - Starting...
2024-06-27 02:05:50 - HikariPool-1 - Start completed.
2024-06-27 02:05:50 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 02:05:50 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 02:05:50 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 02:05:50 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:05:50 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:05:51 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 02:05:51 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 02:05:51 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 02:05:51 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 890 ms.
2024-06-27 02:05:51 - Fetching JDBC Connection from DataSource
2024-06-27 02:05:51 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 02:05:51 - 0 returned as update count for SQL: USE phonestore
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 02:05:51 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 02:05:51 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 112 ms.
2024-06-27 02:05:51 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 02:05:51 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 02:05:51 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 02:05:51 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 02:05:53 - alter table review add column content varchar(255)
2024-06-27 02:05:53 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 02:05:53 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 02:05:53 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 02:05:53 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 02:05:53 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 02:05:53 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 02:05:53 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 02:05:53 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 02:05:53 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 02:05:53 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:05:53 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 02:05:55 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54816d7a, org.springframework.security.web.context.SecurityContextPersistenceFilter@951461a, org.springframework.security.web.header.HeaderWriterFilter@3eadfbbb, org.springframework.security.web.csrf.CsrfFilter@3b7dd173, org.springframework.security.web.authentication.logout.LogoutFilter@5abc488d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@487bc2fe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@307e9c02, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73072745, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@106ac5f4, org.springframework.security.web.session.SessionManagementFilter@7c9c7e7d, org.springframework.security.web.access.ExceptionTranslationFilter@1677f98b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@178c4480]
2024-06-27 02:05:56 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 02:05:56 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 02:05:56 - Started StoreApplication in 11.053 seconds (JVM running for 11.791)
2024-06-27 02:05:59 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 02:05:59 - Initializing Servlet 'dispatcherServlet'
2024-06-27 02:05:59 - Completed initialization in 3 ms
2024-06-27 02:05:59 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [485] milliseconds.
2024-06-27 02:05:59 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [208] milliseconds.
2024-06-27 02:06:01 - No mapping for GET /images/logo.png
2024-06-27 02:06:02 - No mapping for GET /templates/logo.png
2024-06-27 02:06:03 - Fetching all stores
2024-06-27 02:06:03 - Setting JDBC Connection [HikariProxyConnection@130153353 wrapping com.mysql.cj.jdbc.ConnectionImpl@14d68c56] read-only
2024-06-27 02:06:03 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 02:06:04 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 02:06:04 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@130153353 wrapping com.mysql.cj.jdbc.ConnectionImpl@14d68c56]
2024-06-27 02:06:04 - No mapping for GET /images/logo.png
2024-06-27 02:13:16 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:13:16 - HikariPool-1 - Shutdown initiated...
2024-06-27 02:13:16 - HikariPool-1 - Shutdown completed.
2024-06-27 02:13:29 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 02:13:29 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 23072 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 02:13:29 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 02:13:29 - No active profile set, falling back to default profiles: default
2024-06-27 02:13:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 02:13:31 - Finished Spring Data repository scanning in 146 ms. Found 14 JPA repository interfaces.
2024-06-27 02:13:32 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 02:13:32 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 02:13:32 - Starting service [Tomcat]
2024-06-27 02:13:32 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 02:13:32 - Initializing Spring embedded WebApplicationContext
2024-06-27 02:13:32 - Root WebApplicationContext: initialization completed in 3080 ms
2024-06-27 02:13:32 - Fetching JDBC Connection from DataSource
2024-06-27 02:13:32 - HikariPool-1 - Starting...
2024-06-27 02:13:33 - HikariPool-1 - Start completed.
2024-06-27 02:13:33 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 02:13:33 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 02:13:33 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 02:13:33 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 02:13:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:13:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:13:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 02:13:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:13:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:13:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:13:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 02:13:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:13:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:13:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:13:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:13:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 02:13:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 02:13:34 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 02:13:34 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 882 ms.
2024-06-27 02:13:34 - Fetching JDBC Connection from DataSource
2024-06-27 02:13:34 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 02:13:34 - 0 returned as update count for SQL: USE phonestore
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 02:13:34 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 02:13:34 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 79 ms.
2024-06-27 02:13:34 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 02:13:34 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 02:13:34 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 02:13:35 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 02:13:36 - alter table review add column content varchar(255)
2024-06-27 02:13:36 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 02:13:36 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 02:13:36 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 02:13:36 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 02:13:36 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 02:13:36 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 02:13:36 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 02:13:36 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 02:13:36 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 02:13:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:13:36 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 02:13:38 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5eed2edf, org.springframework.security.web.context.SecurityContextPersistenceFilter@307e9c02, org.springframework.security.web.header.HeaderWriterFilter@7c9c7e7d, org.springframework.security.web.csrf.CsrfFilter@524418a2, org.springframework.security.web.authentication.logout.LogoutFilter@1c76b2fe, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6491006, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6bc08a77, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@79735611, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4552e288, org.springframework.security.web.session.SessionManagementFilter@951461a, org.springframework.security.web.access.ExceptionTranslationFilter@3eadfbbb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@40da1644]
2024-06-27 02:13:39 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 02:13:39 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 02:13:39 - Started StoreApplication in 10.79 seconds (JVM running for 11.66)
2024-06-27 02:13:40 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 02:13:40 - Initializing Servlet 'dispatcherServlet'
2024-06-27 02:13:40 - Completed initialization in 2 ms
2024-06-27 02:13:40 - No mapping for GET /images/logo.png
2024-06-27 02:13:41 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [520] milliseconds.
2024-06-27 02:13:43 - No mapping for GET /images/logo.png
2024-06-27 02:13:44 - No mapping for GET /images/logo.png
2024-06-27 02:13:46 - Fetching all stores
2024-06-27 02:13:46 - Setting JDBC Connection [HikariProxyConnection@1305774971 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:13:46 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 02:13:46 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 02:13:46 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1305774971 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:13:46 - No mapping for GET /images/logo.png
2024-06-27 02:13:47 - No mapping for GET /images/logo.png
2024-06-27 02:13:47 - No mapping for GET /favicon.ico
2024-06-27 02:13:48 - Fetching all rentals
2024-06-27 02:13:48 - Setting JDBC Connection [HikariProxyConnection@407795883 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:13:48 - select rental0_.id as id1_10_, rental0_.customer_id as customer2_10_, rental0_.employee_id as employee3_10_, rental0_.payment_id as payment_4_10_, rental0_.phone_id as phone_id5_10_ from rental rental0_ order by rental0_.id asc limit ?
2024-06-27 02:13:48 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:13:48 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:13:48 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:13:48 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:13:48 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:13:48 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:13:48 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:13:48 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:13:48 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:13:48 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:13:48 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:13:48 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:13:48 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:13:48 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:13:48 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:13:48 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:13:48 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:13:48 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:13:48 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:13:48 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:13:48 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:13:48 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:13:48 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:13:48 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:13:48 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:13:48 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:13:48 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:13:48 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:13:48 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:13:48 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:13:48 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:13:48 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:13:48 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:13:48 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:13:48 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:13:48 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:13:48 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:13:48 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:13:48 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:13:48 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:13:48 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:13:48 - select count(rental0_.id) as col_0_0_ from rental rental0_
2024-06-27 02:13:48 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@407795883 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:13:54 - No mapping for GET /images/logo.png
2024-06-27 02:13:54 - No mapping for GET /favicon.ico
2024-06-27 02:13:55 - Fetching all phones
2024-06-27 02:13:55 - Setting JDBC Connection [HikariProxyConnection@1007335279 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:13:55 - select phone0_.id as id1_7_, phone0_.brand_id as brand_id3_7_, phone0_.model_id as model_id4_7_, phone0_.name as name2_7_ from phone phone0_ order by phone0_.id asc limit ?
2024-06-27 02:13:55 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:13:55 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:13:55 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:13:55 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:13:55 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:13:55 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:13:55 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:13:55 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:13:55 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:13:55 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:13:55 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:13:55 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:13:55 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:13:55 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:13:55 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:13:55 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:13:55 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:13:55 - select count(phone0_.id) as col_0_0_ from phone phone0_
2024-06-27 02:13:55 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1007335279 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:13:57 - No mapping for GET /images/logo.png
2024-06-27 02:13:57 - No mapping for GET /favicon.ico
2024-06-27 02:13:57 - Fetching all orders
2024-06-27 02:13:57 - Setting JDBC Connection [HikariProxyConnection@770356888 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:13:57 - select order0_.id as id1_9_, order0_.customer_id as customer2_9_, order0_.employee_id as employee3_9_, order0_.payment_id as payment_4_9_, order0_.phone_id as phone_id5_9_ from purchase_order order0_ order by order0_.id asc limit ?
2024-06-27 02:13:57 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@770356888 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:13:59 - No mapping for GET /images/logo.png
2024-06-27 02:14:00 - Fetching all models
2024-06-27 02:14:00 - Setting JDBC Connection [HikariProxyConnection@1557680401 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:14:00 - select model0_.id as id1_5_, model0_.brand_id as brand_id3_5_, model0_.name as name2_5_ from model model0_ order by model0_.id asc limit ?
2024-06-27 02:14:00 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:14:00 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:14:00 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:14:00 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:14:00 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:14:00 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:14:00 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:14:00 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:14:00 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:14:00 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:14:00 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:14:00 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:14:00 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:14:00 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:14:00 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:14:00 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:14:00 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:14:00 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:14:00 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:14:00 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:14:00 - select count(model0_.id) as col_0_0_ from model model0_
2024-06-27 02:14:00 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1557680401 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:14:01 - No mapping for GET /images/logo.png
2024-06-27 02:14:01 - No mapping for GET /favicon.ico
2024-06-27 02:14:01 - Fetching all customers
2024-06-27 02:14:01 - Setting JDBC Connection [HikariProxyConnection@738893498 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:14:01 - select customer0_.id as id1_2_, customer0_.name as name2_2_ from customer customer0_ order by customer0_.id asc limit ?
2024-06-27 02:14:01 - select count(customer0_.id) as col_0_0_ from customer customer0_
2024-06-27 02:14:01 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@738893498 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:14:03 - No mapping for GET /images/logo.png
2024-06-27 02:14:04 - Fetching all brands
2024-06-27 02:14:04 - Setting JDBC Connection [HikariProxyConnection@988302481 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:14:04 - select brand0_.id as id1_1_, brand0_.name as name2_1_ from brand brand0_ order by brand0_.id asc limit ?
2024-06-27 02:14:04 - select count(brand0_.id) as col_0_0_ from brand brand0_
2024-06-27 02:14:04 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@988302481 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:14:09 - Saving brand: dev.project.awbd.model.Brand@5671820b
2024-06-27 02:14:09 - insert into brand (name) values (?)
2024-06-27 02:14:09 - binding parameter [1] as [VARCHAR] - [test]
2024-06-27 02:14:09 - Fetching all brands
2024-06-27 02:14:09 - Setting JDBC Connection [HikariProxyConnection@1132932016 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:14:09 - select brand0_.id as id1_1_, brand0_.name as name2_1_ from brand brand0_ order by brand0_.id asc limit ?
2024-06-27 02:14:09 - select count(brand0_.id) as col_0_0_ from brand brand0_
2024-06-27 02:14:09 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1132932016 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:14:09 - No mapping for GET /favicon.ico
2024-06-27 02:14:12 - Fetching all brands
2024-06-27 02:14:12 - Setting JDBC Connection [HikariProxyConnection@1228831061 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:14:12 - select brand0_.id as id1_1_, brand0_.name as name2_1_ from brand brand0_ order by brand0_.id asc limit ?, ?
2024-06-27 02:14:12 - select count(brand0_.id) as col_0_0_ from brand brand0_
2024-06-27 02:14:12 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1228831061 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:14:12 - No mapping for GET /favicon.ico
2024-06-27 02:14:13 - Fetching all brands
2024-06-27 02:14:13 - Setting JDBC Connection [HikariProxyConnection@219280380 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:14:13 - select brand0_.id as id1_1_, brand0_.name as name2_1_ from brand brand0_ order by brand0_.id asc limit ?, ?
2024-06-27 02:14:13 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@219280380 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:15:15 - Fetching all brands
2024-06-27 02:15:15 - Setting JDBC Connection [HikariProxyConnection@1267205897 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:15:15 - select brand0_.id as id1_1_, brand0_.name as name2_1_ from brand brand0_ order by brand0_.id asc limit ?, ?
2024-06-27 02:15:15 - select count(brand0_.id) as col_0_0_ from brand brand0_
2024-06-27 02:15:15 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1267205897 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:15:15 - No mapping for GET /favicon.ico
2024-06-27 02:15:17 - Fetching all brands
2024-06-27 02:15:17 - Setting JDBC Connection [HikariProxyConnection@463895129 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:15:17 - select brand0_.id as id1_1_, brand0_.name as name2_1_ from brand brand0_ order by brand0_.id asc limit ?
2024-06-27 02:15:17 - select count(brand0_.id) as col_0_0_ from brand brand0_
2024-06-27 02:15:17 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@463895129 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:15:19 - Fetching all brands
2024-06-27 02:15:19 - Setting JDBC Connection [HikariProxyConnection@1223585928 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9] read-only
2024-06-27 02:15:19 - select brand0_.id as id1_1_, brand0_.name as name2_1_ from brand brand0_ order by brand0_.id asc limit ?
2024-06-27 02:15:19 - select count(brand0_.id) as col_0_0_ from brand brand0_
2024-06-27 02:15:19 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1223585928 wrapping com.mysql.cj.jdbc.ConnectionImpl@ba589d9]
2024-06-27 02:15:19 - No mapping for GET /favicon.ico
2024-06-27 02:15:20 - No mapping for GET /images/logo.png
2024-06-27 02:15:23 - [THYMELEAF][http-nio-8080-exec-2] Exception processing template "register": Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)
org.thymeleaf.exceptions.TemplateProcessingException: Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:117)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'user' available as request attribute
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
	at org.springframework.web.servlet.support.RequestContext.getBindStatus(RequestContext.java:903)
	at org.thymeleaf.spring5.context.webmvc.SpringWebMvcThymeleafRequestContext.getBindStatus(SpringWebMvcThymeleafRequestContext.java:227)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatusFromParsedExpression(FieldUtils.java:306)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:253)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:227)
	at org.thymeleaf.spring5.processor.AbstractSpringFieldTagProcessor.doProcess(AbstractSpringFieldTagProcessor.java:174)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	... 85 common frames omitted
2024-06-27 02:15:23 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)] with root cause
java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'user' available as request attribute
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
	at org.springframework.web.servlet.support.RequestContext.getBindStatus(RequestContext.java:903)
	at org.thymeleaf.spring5.context.webmvc.SpringWebMvcThymeleafRequestContext.getBindStatus(SpringWebMvcThymeleafRequestContext.java:227)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatusFromParsedExpression(FieldUtils.java:306)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:253)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:227)
	at org.thymeleaf.spring5.processor.AbstractSpringFieldTagProcessor.doProcess(AbstractSpringFieldTagProcessor.java:174)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-06-27 02:15:23 - No mapping for GET /css/styles.css
2024-06-27 02:15:26 - No mapping for GET /images/logo.png
2024-06-27 02:15:26 - No mapping for GET /favicon.ico
2024-06-27 02:20:38 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:20:38 - HikariPool-1 - Shutdown initiated...
2024-06-27 02:20:38 - HikariPool-1 - Shutdown completed.
2024-06-27 02:31:27 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 02:31:27 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 36248 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 02:31:27 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 02:31:27 - No active profile set, falling back to default profiles: default
2024-06-27 02:31:29 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 02:31:29 - Finished Spring Data repository scanning in 183 ms. Found 14 JPA repository interfaces.
2024-06-27 02:31:31 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 02:31:31 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 02:31:31 - Starting service [Tomcat]
2024-06-27 02:31:31 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 02:31:31 - Initializing Spring embedded WebApplicationContext
2024-06-27 02:31:31 - Root WebApplicationContext: initialization completed in 3722 ms
2024-06-27 02:31:31 - Fetching JDBC Connection from DataSource
2024-06-27 02:31:31 - HikariPool-1 - Starting...
2024-06-27 02:31:32 - HikariPool-1 - Start completed.
2024-06-27 02:31:32 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 02:31:32 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 02:31:32 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 02:31:32 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 02:31:32 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:31:32 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 02:31:33 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 02:31:33 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1008 ms.
2024-06-27 02:31:33 - Fetching JDBC Connection from DataSource
2024-06-27 02:31:33 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 02:31:33 - 0 returned as update count for SQL: USE phonestore
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 02:31:33 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 02:31:33 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 86 ms.
2024-06-27 02:31:33 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 02:31:33 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 02:31:34 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 02:31:34 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 02:31:35 - alter table review add column content varchar(255)
2024-06-27 02:31:35 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 02:31:35 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 02:31:35 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 02:31:36 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 02:31:36 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 02:31:36 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 02:31:36 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 02:31:36 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 02:31:36 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 02:31:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:31:36 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 02:31:38 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40da1644, org.springframework.security.web.context.SecurityContextPersistenceFilter@30b29f55, org.springframework.security.web.header.HeaderWriterFilter@7f1b2f07, org.springframework.security.web.csrf.CsrfFilter@22f0e329, org.springframework.security.web.authentication.logout.LogoutFilter@65a3d7c9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3df54fd5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@550e7ef6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37922937, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5980e29f, org.springframework.security.web.session.SessionManagementFilter@399a5a52, org.springframework.security.web.access.ExceptionTranslationFilter@202fd4c4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@39179470]
2024-06-27 02:31:38 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 02:31:38 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 02:31:38 - Started StoreApplication in 12.043 seconds (JVM running for 12.899)
2024-06-27 02:31:50 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 02:31:50 - Initializing Servlet 'dispatcherServlet'
2024-06-27 02:31:50 - Completed initialization in 1 ms
2024-06-27 02:31:50 - No mapping for GET /images/logo.png
2024-06-27 02:31:51 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [383] milliseconds.
2024-06-27 02:31:51 - No mapping for GET /images/logo.png
2024-06-27 02:31:52 - No mapping for GET /images/logo.png
2024-06-27 02:31:54 - [THYMELEAF][http-nio-8080-exec-2] Exception processing template "register": Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)
org.thymeleaf.exceptions.TemplateProcessingException: Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:117)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'user' available as request attribute
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
	at org.springframework.web.servlet.support.RequestContext.getBindStatus(RequestContext.java:903)
	at org.thymeleaf.spring5.context.webmvc.SpringWebMvcThymeleafRequestContext.getBindStatus(SpringWebMvcThymeleafRequestContext.java:227)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatusFromParsedExpression(FieldUtils.java:306)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:253)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:227)
	at org.thymeleaf.spring5.processor.AbstractSpringFieldTagProcessor.doProcess(AbstractSpringFieldTagProcessor.java:174)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	... 85 common frames omitted
2024-06-27 02:31:54 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)] with root cause
java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'user' available as request attribute
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
	at org.springframework.web.servlet.support.RequestContext.getBindStatus(RequestContext.java:903)
	at org.thymeleaf.spring5.context.webmvc.SpringWebMvcThymeleafRequestContext.getBindStatus(SpringWebMvcThymeleafRequestContext.java:227)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatusFromParsedExpression(FieldUtils.java:306)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:253)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:227)
	at org.thymeleaf.spring5.processor.AbstractSpringFieldTagProcessor.doProcess(AbstractSpringFieldTagProcessor.java:174)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-06-27 02:31:54 - No mapping for GET /css/styles.css
2024-06-27 02:31:56 - No mapping for GET /images/logo.png
2024-06-27 02:31:56 - No mapping for GET /favicon.ico
2024-06-27 02:31:56 - Fetching all stores
2024-06-27 02:31:56 - Setting JDBC Connection [HikariProxyConnection@5111882 wrapping com.mysql.cj.jdbc.ConnectionImpl@4cc07c6d] read-only
2024-06-27 02:31:57 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 02:31:57 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 02:31:57 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@5111882 wrapping com.mysql.cj.jdbc.ConnectionImpl@4cc07c6d]
2024-06-27 02:31:57 - No mapping for GET /images/logo.png
2024-06-27 02:31:58 - No mapping for GET /images/logo.png
2024-06-27 02:32:00 - Fetching all rentals
2024-06-27 02:32:00 - Setting JDBC Connection [HikariProxyConnection@1896990273 wrapping com.mysql.cj.jdbc.ConnectionImpl@4cc07c6d] read-only
2024-06-27 02:32:00 - select rental0_.id as id1_10_, rental0_.customer_id as customer2_10_, rental0_.employee_id as employee3_10_, rental0_.payment_id as payment_4_10_, rental0_.phone_id as phone_id5_10_ from rental rental0_ order by rental0_.id asc limit ?
2024-06-27 02:32:00 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:00 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:00 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:00 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:00 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:00 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:00 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:00 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:00 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:00 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:00 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:00 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:00 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:00 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:00 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:00 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:00 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:00 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:00 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:00 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:00 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:00 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:00 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:00 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:00 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:00 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:00 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:00 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:00 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:00 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:00 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:00 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:00 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:00 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:00 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:00 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:00 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:00 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:00 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:00 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:00 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:00 - select count(rental0_.id) as col_0_0_ from rental rental0_
2024-06-27 02:32:00 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1896990273 wrapping com.mysql.cj.jdbc.ConnectionImpl@4cc07c6d]
2024-06-27 02:32:02 - No mapping for GET /images/logo.png
2024-06-27 02:32:02 - No mapping for GET /favicon.ico
2024-06-27 02:32:07 - Fetching all rentals
2024-06-27 02:32:07 - Setting JDBC Connection [HikariProxyConnection@452768454 wrapping com.mysql.cj.jdbc.ConnectionImpl@4cc07c6d] read-only
2024-06-27 02:32:07 - select rental0_.id as id1_10_, rental0_.customer_id as customer2_10_, rental0_.employee_id as employee3_10_, rental0_.payment_id as payment_4_10_, rental0_.phone_id as phone_id5_10_ from rental rental0_ order by rental0_.id asc limit ?
2024-06-27 02:32:07 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:07 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:07 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:07 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:07 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:07 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:07 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:07 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:07 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:07 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:07 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:07 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:07 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:07 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:07 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:07 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:07 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:07 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:07 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:07 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:07 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:07 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:07 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:07 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:07 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:07 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:07 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:07 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:07 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:07 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:07 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:07 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:07 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:07 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:07 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:07 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:07 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:07 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:07 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:07 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:07 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:07 - select count(rental0_.id) as col_0_0_ from rental rental0_
2024-06-27 02:32:07 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@452768454 wrapping com.mysql.cj.jdbc.ConnectionImpl@4cc07c6d]
2024-06-27 02:32:08 - No mapping for GET /favicon.ico
2024-06-27 02:32:18 - Fetching all rentals
2024-06-27 02:32:18 - Setting JDBC Connection [HikariProxyConnection@1557680401 wrapping com.mysql.cj.jdbc.ConnectionImpl@4cc07c6d] read-only
2024-06-27 02:32:18 - select rental0_.id as id1_10_, rental0_.customer_id as customer2_10_, rental0_.employee_id as employee3_10_, rental0_.payment_id as payment_4_10_, rental0_.phone_id as phone_id5_10_ from rental rental0_ order by rental0_.id asc limit ?
2024-06-27 02:32:18 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:18 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:18 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:18 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:32:18 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:18 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:18 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:18 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:32:18 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:18 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:18 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:18 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:32:18 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:18 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:18 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:18 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:32:18 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:18 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:18 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:18 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:32:18 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:18 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:18 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:18 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:32:18 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:18 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:18 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:18 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:32:18 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:18 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:18 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:18 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:32:18 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:18 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:18 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:18 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:32:18 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:18 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:18 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:18 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:32:18 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:32:18 - select count(rental0_.id) as col_0_0_ from rental rental0_
2024-06-27 02:32:18 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1557680401 wrapping com.mysql.cj.jdbc.ConnectionImpl@4cc07c6d]
2024-06-27 02:32:18 - No mapping for GET /favicon.ico
2024-06-27 02:32:19 - No mapping for GET /favicon.ico
2024-06-27 02:32:20 - No mapping for GET /images/logo.png
2024-06-27 02:35:35 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:35:35 - HikariPool-1 - Shutdown initiated...
2024-06-27 02:35:35 - HikariPool-1 - Shutdown completed.
2024-06-27 02:36:33 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 02:36:33 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 40032 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 02:36:33 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 02:36:33 - No active profile set, falling back to default profiles: default
2024-06-27 02:36:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 02:36:35 - Finished Spring Data repository scanning in 178 ms. Found 14 JPA repository interfaces.
2024-06-27 02:36:36 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 02:36:36 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 02:36:36 - Starting service [Tomcat]
2024-06-27 02:36:36 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 02:36:36 - Initializing Spring embedded WebApplicationContext
2024-06-27 02:36:36 - Root WebApplicationContext: initialization completed in 3538 ms
2024-06-27 02:36:37 - Fetching JDBC Connection from DataSource
2024-06-27 02:36:37 - HikariPool-1 - Starting...
2024-06-27 02:36:37 - HikariPool-1 - Start completed.
2024-06-27 02:36:37 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 02:36:37 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 02:36:37 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 02:36:37 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 02:36:37 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 02:36:37 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 02:36:37 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 02:36:37 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 02:36:37 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 02:36:37 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 02:36:38 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 02:36:38 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 02:36:38 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 02:36:38 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 02:36:38 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 02:36:38 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 02:36:38 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 02:36:38 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 02:36:38 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 921 ms.
2024-06-27 02:36:38 - Fetching JDBC Connection from DataSource
2024-06-27 02:36:38 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 02:36:38 - 0 returned as update count for SQL: USE phonestore
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 02:36:38 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 02:36:38 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 78 ms.
2024-06-27 02:36:38 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 02:36:39 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 02:36:39 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 02:36:39 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 02:36:40 - alter table review add column content varchar(255)
2024-06-27 02:36:40 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 02:36:40 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 02:36:40 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 02:36:41 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 02:36:41 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 02:36:41 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 02:36:41 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 02:36:41 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 02:36:41 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 02:36:41 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:36:41 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 02:36:43 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42fb2be9, org.springframework.security.web.context.SecurityContextPersistenceFilter@58701e8c, org.springframework.security.web.header.HeaderWriterFilter@30b29f55, org.springframework.security.web.csrf.CsrfFilter@4dc5b887, org.springframework.security.web.authentication.logout.LogoutFilter@3b7b099b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2cdd156b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f0e7008, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4197e859, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54816d7a, org.springframework.security.web.session.SessionManagementFilter@550e7ef6, org.springframework.security.web.access.ExceptionTranslationFilter@399a5a52, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5ff8d76f]
2024-06-27 02:36:43 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 02:36:43 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 02:36:43 - Started StoreApplication in 11.507 seconds (JVM running for 12.371)
2024-06-27 02:36:47 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 02:36:47 - Initializing Servlet 'dispatcherServlet'
2024-06-27 02:36:47 - Completed initialization in 1 ms
2024-06-27 02:36:47 - No mapping for GET /images/logo.png
2024-06-27 02:36:48 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [471] milliseconds.
2024-06-27 02:36:48 - No mapping for GET /images/logo.png
2024-06-27 02:36:50 - No mapping for GET /images/logo.png
2024-06-27 02:36:50 - No mapping for GET /favicon.ico
2024-06-27 02:36:51 - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "register": Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)
org.thymeleaf.exceptions.TemplateProcessingException: Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:117)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'user' available as request attribute
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
	at org.springframework.web.servlet.support.RequestContext.getBindStatus(RequestContext.java:903)
	at org.thymeleaf.spring5.context.webmvc.SpringWebMvcThymeleafRequestContext.getBindStatus(SpringWebMvcThymeleafRequestContext.java:227)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatusFromParsedExpression(FieldUtils.java:306)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:253)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:227)
	at org.thymeleaf.spring5.processor.AbstractSpringFieldTagProcessor.doProcess(AbstractSpringFieldTagProcessor.java:174)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	... 85 common frames omitted
2024-06-27 02:36:51 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)] with root cause
java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'user' available as request attribute
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
	at org.springframework.web.servlet.support.RequestContext.getBindStatus(RequestContext.java:903)
	at org.thymeleaf.spring5.context.webmvc.SpringWebMvcThymeleafRequestContext.getBindStatus(SpringWebMvcThymeleafRequestContext.java:227)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatusFromParsedExpression(FieldUtils.java:306)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:253)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:227)
	at org.thymeleaf.spring5.processor.AbstractSpringFieldTagProcessor.doProcess(AbstractSpringFieldTagProcessor.java:174)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-06-27 02:36:51 - No mapping for GET /css/styles.css
2024-06-27 02:36:52 - No mapping for GET /images/logo.png
2024-06-27 02:36:53 - Fetching all stores
2024-06-27 02:36:53 - Setting JDBC Connection [HikariProxyConnection@1323171926 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:36:53 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 02:36:53 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 02:36:53 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1323171926 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:36:53 - No mapping for GET /images/logo.png
2024-06-27 02:37:00 - No mapping for GET /images/logo.png
2024-06-27 02:37:00 - No mapping for GET /favicon.ico
2024-06-27 02:37:16 - Fetching all stores
2024-06-27 02:37:16 - Setting JDBC Connection [HikariProxyConnection@1448811208 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:37:16 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 02:37:16 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 02:37:16 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1448811208 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:37:16 - No mapping for GET /images/logo.png
2024-06-27 02:37:16 - No mapping for GET /favicon.ico
2024-06-27 02:37:18 - No mapping for GET /images/logo.png
2024-06-27 02:37:19 - Fetching all rentals
2024-06-27 02:37:19 - Setting JDBC Connection [HikariProxyConnection@1712690637 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:37:19 - select rental0_.id as id1_10_, rental0_.customer_id as customer2_10_, rental0_.employee_id as employee3_10_, rental0_.payment_id as payment_4_10_, rental0_.phone_id as phone_id5_10_ from rental rental0_ order by rental0_.id asc limit ?
2024-06-27 02:37:19 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:37:19 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:37:19 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:37:19 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:37:19 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:37:19 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:37:19 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:37:19 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:37:19 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:37:19 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:37:19 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:37:19 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:37:19 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:37:19 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:37:19 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:37:19 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:37:19 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:37:19 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:37:19 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:37:19 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:37:19 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:37:19 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:37:19 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:37:19 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:37:19 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:37:19 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:37:19 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:37:19 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:37:19 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:37:19 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:37:19 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:37:19 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:37:19 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:37:19 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:37:19 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:37:19 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:37:19 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:37:19 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:37:19 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:37:19 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:37:19 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:37:19 - select count(rental0_.id) as col_0_0_ from rental rental0_
2024-06-27 02:37:19 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1712690637 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:42:52 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:42:52 - HikariPool-1 - Shutdown initiated...
2024-06-27 02:42:52 - HikariPool-1 - Shutdown completed.
2024-06-27 02:43:08 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 02:43:08 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 37388 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 02:43:08 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 02:43:08 - No active profile set, falling back to default profiles: default
2024-06-27 02:43:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 02:43:10 - Finished Spring Data repository scanning in 207 ms. Found 14 JPA repository interfaces.
2024-06-27 02:43:12 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 02:43:12 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 02:43:12 - Starting service [Tomcat]
2024-06-27 02:43:12 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 02:43:12 - Initializing Spring embedded WebApplicationContext
2024-06-27 02:43:12 - Root WebApplicationContext: initialization completed in 3729 ms
2024-06-27 02:43:12 - Fetching JDBC Connection from DataSource
2024-06-27 02:43:12 - HikariPool-1 - Starting...
2024-06-27 02:43:13 - HikariPool-1 - Start completed.
2024-06-27 02:43:13 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 02:43:13 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 02:43:13 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 02:43:13 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 02:43:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:43:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:43:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 02:43:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:43:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:43:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:43:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 02:43:13 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:43:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:43:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:43:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:43:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 02:43:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 02:43:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 02:43:14 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 1110 ms.
2024-06-27 02:43:14 - Fetching JDBC Connection from DataSource
2024-06-27 02:43:14 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 02:43:14 - 0 returned as update count for SQL: USE phonestore
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 02:43:14 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 02:43:14 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 76 ms.
2024-06-27 02:43:14 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 02:43:14 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 02:43:14 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 02:43:15 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 02:43:16 - alter table review add column content varchar(255)
2024-06-27 02:43:16 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 02:43:16 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 02:43:16 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 02:43:16 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 02:43:16 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 02:43:16 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 02:43:16 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 02:43:16 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 02:43:16 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 02:43:16 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:43:16 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 02:43:18 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@395c21ee, org.springframework.security.web.context.SecurityContextPersistenceFilter@4197e859, org.springframework.security.web.header.HeaderWriterFilter@37922937, org.springframework.security.web.csrf.CsrfFilter@1c80f8dd, org.springframework.security.web.authentication.logout.LogoutFilter@281028ce, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4552e288, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4bdbfbc6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6250d33c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1e733bb5, org.springframework.security.web.session.SessionManagementFilter@8961e55, org.springframework.security.web.access.ExceptionTranslationFilter@682270ff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6491006]
2024-06-27 02:43:19 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 02:43:19 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 02:43:19 - Started StoreApplication in 11.678 seconds (JVM running for 12.639)
2024-06-27 02:43:21 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 02:43:21 - Initializing Servlet 'dispatcherServlet'
2024-06-27 02:43:21 - Completed initialization in 1 ms
2024-06-27 02:43:21 - No mapping for GET /images/logo.png
2024-06-27 02:43:22 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [529] milliseconds.
2024-06-27 02:43:26 - No mapping for GET /images/logo.png
2024-06-27 02:43:27 - No mapping for GET /images/logo.png
2024-06-27 02:43:27 - No mapping for GET /favicon.ico
2024-06-27 02:43:28 - [THYMELEAF][http-nio-8080-exec-3] Exception processing template "register": Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)
org.thymeleaf.exceptions.TemplateProcessingException: Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:117)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
Caused by: java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'user' available as request attribute
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
	at org.springframework.web.servlet.support.RequestContext.getBindStatus(RequestContext.java:903)
	at org.thymeleaf.spring5.context.webmvc.SpringWebMvcThymeleafRequestContext.getBindStatus(SpringWebMvcThymeleafRequestContext.java:227)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatusFromParsedExpression(FieldUtils.java:306)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:253)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:227)
	at org.thymeleaf.spring5.processor.AbstractSpringFieldTagProcessor.doProcess(AbstractSpringFieldTagProcessor.java:174)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	... 85 common frames omitted
2024-06-27 02:43:28 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Error during execution of processor 'org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor' (template: "register" - line 14, col 46)] with root cause
java.lang.IllegalStateException: Neither BindingResult nor plain target object for bean name 'user' available as request attribute
	at org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:153)
	at org.springframework.web.servlet.support.RequestContext.getBindStatus(RequestContext.java:903)
	at org.thymeleaf.spring5.context.webmvc.SpringWebMvcThymeleafRequestContext.getBindStatus(SpringWebMvcThymeleafRequestContext.java:227)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatusFromParsedExpression(FieldUtils.java:306)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:253)
	at org.thymeleaf.spring5.util.FieldUtils.getBindStatus(FieldUtils.java:227)
	at org.thymeleaf.spring5.processor.AbstractSpringFieldTagProcessor.doProcess(AbstractSpringFieldTagProcessor.java:174)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:366)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1400)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1145)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1084)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:218)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:829)
2024-06-27 02:43:28 - No mapping for GET /css/styles.css
2024-06-27 02:43:29 - No mapping for GET /images/logo.png
2024-06-27 02:43:30 - Fetching all stores
2024-06-27 02:43:30 - Setting JDBC Connection [HikariProxyConnection@1323171926 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:43:30 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 02:43:30 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 02:43:30 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1323171926 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:43:31 - No mapping for GET /images/logo.png
2024-06-27 02:43:33 - No mapping for GET /images/logo.png
2024-06-27 02:43:33 - No mapping for GET /favicon.ico
2024-06-27 02:43:33 - Fetching all stores
2024-06-27 02:43:33 - Setting JDBC Connection [HikariProxyConnection@939836677 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:43:33 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 02:43:33 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 02:43:33 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@939836677 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:43:33 - No mapping for GET /images/logo.png
2024-06-27 02:43:34 - No mapping for GET /images/logo.png
2024-06-27 02:43:35 - Fetching all rentals
2024-06-27 02:43:35 - Setting JDBC Connection [HikariProxyConnection@512835470 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:43:35 - select rental0_.id as id1_10_, rental0_.customer_id as customer2_10_, rental0_.employee_id as employee3_10_, rental0_.payment_id as payment_4_10_, rental0_.phone_id as phone_id5_10_ from rental rental0_ order by rental0_.id asc limit ?
2024-06-27 02:43:35 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:43:35 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:43:35 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:43:35 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:43:35 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:43:35 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:43:35 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:43:35 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:43:35 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:43:35 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:43:35 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:43:35 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:43:35 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:43:35 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:43:35 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:43:35 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:43:35 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:43:35 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:43:35 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:43:35 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:43:35 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:43:35 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:43:35 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:43:35 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:43:35 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:43:35 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:43:35 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:43:35 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:43:35 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:43:35 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:43:35 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:43:35 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:43:35 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:43:35 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:43:35 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:43:35 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:43:35 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:43:35 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:43:35 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:43:35 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:43:35 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:43:35 - select count(rental0_.id) as col_0_0_ from rental rental0_
2024-06-27 02:43:35 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@512835470 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:43:37 - No mapping for GET /images/logo.png
2024-06-27 02:43:37 - No mapping for GET /favicon.ico
2024-06-27 02:43:38 - Fetching all phones
2024-06-27 02:43:38 - Setting JDBC Connection [HikariProxyConnection@207185906 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:43:38 - select phone0_.id as id1_7_, phone0_.brand_id as brand_id3_7_, phone0_.model_id as model_id4_7_, phone0_.name as name2_7_ from phone phone0_ order by phone0_.id asc limit ?
2024-06-27 02:43:38 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:43:38 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:43:38 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:43:38 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:43:38 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:43:38 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:43:38 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:43:38 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:43:38 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:43:38 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:43:38 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:43:38 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:43:38 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:43:38 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:43:38 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:43:38 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:43:38 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:43:38 - select count(phone0_.id) as col_0_0_ from phone phone0_
2024-06-27 02:43:38 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@207185906 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:43:49 - No mapping for GET /images/logo.png
2024-06-27 02:43:49 - No mapping for GET /favicon.ico
2024-06-27 02:43:50 - Fetching all orders
2024-06-27 02:43:50 - Setting JDBC Connection [HikariProxyConnection@2040882485 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:43:50 - select order0_.id as id1_9_, order0_.customer_id as customer2_9_, order0_.employee_id as employee3_9_, order0_.payment_id as payment_4_9_, order0_.phone_id as phone_id5_9_ from purchase_order order0_ order by order0_.id asc limit ?
2024-06-27 02:43:50 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2040882485 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:43:50 - No mapping for GET /favicon.ico
2024-06-27 02:43:56 - No mapping for GET /images/logo.png
2024-06-27 02:43:56 - No mapping for GET /favicon.ico
2024-06-27 02:43:57 - Fetching all orders
2024-06-27 02:43:57 - Setting JDBC Connection [HikariProxyConnection@1710801390 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:43:57 - select order0_.id as id1_9_, order0_.customer_id as customer2_9_, order0_.employee_id as employee3_9_, order0_.payment_id as payment_4_9_, order0_.phone_id as phone_id5_9_ from purchase_order order0_ order by order0_.id asc limit ?
2024-06-27 02:43:57 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1710801390 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:43:58 - No mapping for GET /images/logo.png
2024-06-27 02:43:58 - No mapping for GET /favicon.ico
2024-06-27 02:43:59 - Fetching all models
2024-06-27 02:43:59 - Setting JDBC Connection [HikariProxyConnection@447298953 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:43:59 - select model0_.id as id1_5_, model0_.brand_id as brand_id3_5_, model0_.name as name2_5_ from model model0_ order by model0_.id asc limit ?
2024-06-27 02:43:59 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:59 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:43:59 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:59 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:43:59 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:59 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:43:59 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:59 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:43:59 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:59 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:43:59 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:59 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:43:59 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:59 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:43:59 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:59 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:43:59 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:59 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:43:59 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:43:59 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:43:59 - select count(model0_.id) as col_0_0_ from model model0_
2024-06-27 02:43:59 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@447298953 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:44:05 - No mapping for GET /images/logo.png
2024-06-27 02:44:07 - Fetching all customers
2024-06-27 02:44:07 - Setting JDBC Connection [HikariProxyConnection@755906036 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:44:07 - select customer0_.id as id1_2_, customer0_.name as name2_2_ from customer customer0_ order by customer0_.id asc limit ?
2024-06-27 02:44:07 - select count(customer0_.id) as col_0_0_ from customer customer0_
2024-06-27 02:44:07 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@755906036 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:44:07 - No mapping for GET /favicon.ico
2024-06-27 02:44:11 - Saving customer: dev.project.awbd.model.Customer@2b00ddea
2024-06-27 02:44:11 - insert into customer (name) values (?)
2024-06-27 02:44:11 - binding parameter [1] as [VARCHAR] - [TEST]
2024-06-27 02:44:11 - Fetching all customers
2024-06-27 02:44:11 - Setting JDBC Connection [HikariProxyConnection@1055745481 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:44:11 - select customer0_.id as id1_2_, customer0_.name as name2_2_ from customer customer0_ order by customer0_.id asc limit ?
2024-06-27 02:44:11 - select count(customer0_.id) as col_0_0_ from customer customer0_
2024-06-27 02:44:11 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1055745481 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:44:11 - No mapping for GET /favicon.ico
2024-06-27 02:44:13 - No mapping for GET /images/logo.png
2024-06-27 02:44:14 - Fetching all brands
2024-06-27 02:44:14 - Setting JDBC Connection [HikariProxyConnection@292299239 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:44:14 - select brand0_.id as id1_1_, brand0_.name as name2_1_ from brand brand0_ order by brand0_.id asc limit ?
2024-06-27 02:44:14 - select count(brand0_.id) as col_0_0_ from brand brand0_
2024-06-27 02:44:14 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@292299239 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:44:16 - No mapping for GET /favicon.ico
2024-06-27 02:44:17 - No mapping for GET /images/logo.png
2024-06-27 02:44:18 - Fetching all stores
2024-06-27 02:44:18 - Setting JDBC Connection [HikariProxyConnection@559284851 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:44:18 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 02:44:18 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 02:44:18 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@559284851 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:44:18 - No mapping for GET /images/logo.png
2024-06-27 02:44:19 - No mapping for GET /images/logo.png
2024-06-27 02:44:20 - Fetching all rentals
2024-06-27 02:44:20 - Setting JDBC Connection [HikariProxyConnection@1260151039 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:44:20 - select rental0_.id as id1_10_, rental0_.customer_id as customer2_10_, rental0_.employee_id as employee3_10_, rental0_.payment_id as payment_4_10_, rental0_.phone_id as phone_id5_10_ from rental rental0_ order by rental0_.id asc limit ?
2024-06-27 02:44:20 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:44:20 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:44:20 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:44:20 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:44:20 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:44:20 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:44:20 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:44:20 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:44:20 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:44:20 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:44:20 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:44:20 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:44:20 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:44:20 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:44:20 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:44:20 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:44:20 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:44:20 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:44:20 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:44:20 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:44:20 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:44:20 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:44:20 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:44:20 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:44:20 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:44:20 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:44:20 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:44:20 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:44:20 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:44:20 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:44:20 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:44:20 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:44:20 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:44:20 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:44:20 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:44:20 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:44:20 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:44:20 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:44:20 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:44:20 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:44:20 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:44:20 - select count(rental0_.id) as col_0_0_ from rental rental0_
2024-06-27 02:44:20 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1260151039 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:44:21 - No mapping for GET /favicon.ico
2024-06-27 02:44:44 - No mapping for GET /images/logo.png
2024-06-27 02:44:44 - No mapping for GET /favicon.ico
2024-06-27 02:44:45 - Fetching all phones
2024-06-27 02:44:45 - Setting JDBC Connection [HikariProxyConnection@174199622 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15] read-only
2024-06-27 02:44:45 - select phone0_.id as id1_7_, phone0_.brand_id as brand_id3_7_, phone0_.model_id as model_id4_7_, phone0_.name as name2_7_ from phone phone0_ order by phone0_.id asc limit ?
2024-06-27 02:44:45 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:44:45 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:44:45 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:44:45 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:44:45 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:44:45 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:44:45 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:44:45 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:44:45 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:44:45 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:44:45 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:44:45 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:44:45 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:44:45 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:44:45 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:44:45 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:44:45 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:44:45 - select count(phone0_.id) as col_0_0_ from phone phone0_
2024-06-27 02:44:45 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@174199622 wrapping com.mysql.cj.jdbc.ConnectionImpl@53e1cc15]
2024-06-27 02:44:45 - No mapping for GET /favicon.ico
2024-06-27 02:48:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:48:31 - HikariPool-1 - Shutdown initiated...
2024-06-27 02:48:31 - HikariPool-1 - Shutdown completed.
2024-06-27 02:59:08 - HV000001: Hibernate Validator 6.2.0.Final
2024-06-27 02:59:08 - Starting StoreApplication using Java 11.0.12 on gabrieldragomir with PID 44112 (C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1\target\classes started by gabriel.dragomir in C:\Users\gabriel.dragomir\IdeaProjects\DragomirGabrielBogdan-P1)
2024-06-27 02:59:09 - Running with Spring Boot v2.5.5, Spring v5.3.10
2024-06-27 02:59:09 - No active profile set, falling back to default profiles: default
2024-06-27 02:59:11 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-06-27 02:59:11 - Finished Spring Data repository scanning in 220 ms. Found 14 JPA repository interfaces.
2024-06-27 02:59:13 - Tomcat initialized with port(s): 8080 (http)
2024-06-27 02:59:13 - Initializing ProtocolHandler ["http-nio-8080"]
2024-06-27 02:59:13 - Starting service [Tomcat]
2024-06-27 02:59:13 - Starting Servlet engine: [Apache Tomcat/9.0.53]
2024-06-27 02:59:13 - Initializing Spring embedded WebApplicationContext
2024-06-27 02:59:13 - Root WebApplicationContext: initialization completed in 4233 ms
2024-06-27 02:59:13 - Fetching JDBC Connection from DataSource
2024-06-27 02:59:13 - HikariPool-1 - Starting...
2024-06-27 02:59:14 - HikariPool-1 - Start completed.
2024-06-27 02:59:14 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql]
2024-06-27 02:59:14 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=0
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Accessory
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Brand
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Customer
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Employee
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Model
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS `Order`
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Payment
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Phone
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Rental
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Repair
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Review
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Stock
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS Store
2024-06-27 02:59:14 - 0 returned as update count for SQL: DROP TABLE IF EXISTS User
2024-06-27 02:59:14 - 0 returned as update count for SQL: SET FOREIGN_KEY_CHECKS=1
2024-06-27 02:59:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Brand ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:59:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Model ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:59:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Phone ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, brand_id BIGINT, model_id BIGINT, FOREIGN KEY (brand_id) REFERENCES Brand(id), FOREIGN KEY (model_id) REFERENCES Model(id) )
2024-06-27 02:59:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Store ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:59:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Customer ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL )
2024-06-27 02:59:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Employee ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, store_id BIGINT, FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:59:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Payment ( id BIGINT AUTO_INCREMENT PRIMARY KEY )
2024-06-27 02:59:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Stock ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, store_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (store_id) REFERENCES Store(id) )
2024-06-27 02:59:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS `Order` ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:59:14 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Accessory ( id BIGINT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255) NOT NULL, phone_id BIGINT, brand_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (brand_id) REFERENCES Brand(id) )
2024-06-27 02:59:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Rental ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, employee_id BIGINT, rental_date DATE, return_date DATE, payment_id BIGINT, FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (employee_id) REFERENCES Employee(id), FOREIGN KEY (payment_id) REFERENCES Payment(id) )
2024-06-27 02:59:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Repair ( id BIGINT AUTO_INCREMENT PRIMARY KEY, phone_id BIGINT, repair_date DATE, description VARCHAR(255), customer_id BIGINT, FOREIGN KEY (phone_id) REFERENCES Phone(id), FOREIGN KEY (customer_id) REFERENCES Customer(id) )
2024-06-27 02:59:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS Review ( id BIGINT AUTO_INCREMENT PRIMARY KEY, customer_id BIGINT, phone_id BIGINT, rating INT, comment VARCHAR(255), FOREIGN KEY (customer_id) REFERENCES Customer(id), FOREIGN KEY (phone_id) REFERENCES Phone(id) )
2024-06-27 02:59:15 - 0 returned as update count for SQL: CREATE TABLE IF NOT EXISTS User ( id BIGINT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL )
2024-06-27 02:59:15 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/schema.sql] in 997 ms.
2024-06-27 02:59:15 - Fetching JDBC Connection from DataSource
2024-06-27 02:59:15 - Executing SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql]
2024-06-27 02:59:15 - 0 returned as update count for SQL: USE phonestore
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Brand (name) VALUES ('Apple'), ('Samsung'), ('Nokia'), ('Sony'), ('LG'), ('Huawei'), ('OnePlus'), ('Xiaomi'), ('Oppo'), ('Vivo'), ('Motorola'), ('Google'), ('HTC'), ('Asus'), ('Lenovo'), ('Realme'), ('TCL'), ('ZTE'), ('Microsoft'), ('Honor')
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Model (name, brand_id) VALUES ('iPhone 13', 1), ('Galaxy S21', 2), ('Nokia 8.3', 3), ('Xperia 5', 4), ('LG V60', 5), ('P40', 6), ('OnePlus 8T', 7), ('Mi 11', 8), ('Reno 5', 9), ('V21', 10), ('Moto G100', 11), ('Pixel 5', 12), ('Desire 20', 13), ('Zenfone 7', 14), ('Legion', 15), ('Realme 7', 16), ('10 Pro', 17), ('Axon 30', 18), ('Surface Duo', 19), ('Magic 3', 20)
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Phone (name, brand_id, model_id) VALUES ('iPhone 13 Pro', 1, 1), ('iPhone 13 Mini', 1, 1), ('Galaxy S21 Ultra', 2, 2), ('Galaxy S21 Plus', 2, 2), ('Nokia 8.3 5G', 3, 3), ('Xperia 5 II', 4, 4), ('LG V60 ThinQ', 5, 5), ('P40 Pro', 6, 6), ('OnePlus 8T Pro', 7, 7), ('Mi 11 Ultra', 8, 8), ('Reno 5 Pro', 9, 9), ('V21e', 10, 10), ('Moto G100 Plus', 11, 11), ('Pixel 5a', 12, 12), ('Desire 20 Pro', 13, 13), ('Zenfone 7 Pro', 14, 14), ('Legion Pro', 15, 15), ('Realme 7 Pro', 16, 16), ('10 Pro Plus', 17, 17), ('Axon 30 Ultra', 18, 18)
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Store (name) VALUES ('Store A'), ('Store B'), ('Store C'), ('Store D'), ('Store E'), ('Store F'), ('Store G'), ('Store H'), ('Store I'), ('Store J'), ('Store K'), ('Store L'), ('Store M'), ('Store N'), ('Store O'), ('Store P'), ('Store Q'), ('Store R'), ('Store S'), ('Store T')
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Customer (name) VALUES ('John Doe'), ('Jane Smith'), ('Michael Johnson'), ('Emily Davis'), ('David Brown'), ('Chris White'), ('Patricia Black'), ('Linda Green'), ('Barbara Blue'), ('Steven Red'), ('Mary Yellow'), ('Susan Pink'), ('Paul Orange'), ('Jessica Purple'), ('Laura Grey'), ('Nancy Silver'), ('Karen Gold'), ('Betty Copper'), ('Dorothy Bronze'), ('Sandra Diamond')
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Employee (name, store_id) VALUES ('Alice', 1), ('Bob', 1), ('Charlie', 2), ('Diana', 2), ('Eve', 1), ('Frank', 3), ('Grace', 3), ('Heidi', 4), ('Ivan', 4), ('Judy', 3), ('Mallory', 5), ('Oscar', 5), ('Peggy', 6), ('Sybil', 6), ('Trent', 5), ('Victor', 7), ('Wendy', 7), ('Xavier', 8), ('Yolanda', 8), ('Zara', 7)
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Payment () VALUES (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Stock (phone_id, store_id) VALUES (1, 1), (2, 1), (3, 2), (4, 2), (5, 1), (6, 3), (7, 3), (8, 4), (9, 4), (10, 3), (11, 5), (12, 5), (13, 6), (14, 6), (15, 5), (16, 7), (17, 7), (18, 8), (19, 8), (20, 7)
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO `Order` (customer_id, phone_id, employee_id, payment_id) VALUES (1, 1, 1, 1), (2, 2, 2, 2), (3, 3, 3, 3), (4, 1, 4, 4), (5, 2, 5, 5), (6, 3, 6, 6), (7, 4, 7, 7), (8, 5, 8, 8), (9, 6, 9, 9), (10, 7, 10, 10), (11, 8, 11, 11), (12, 9, 12, 12), (13, 10, 13, 13), (14, 11, 14, 14), (15, 12, 15, 15), (16, 13, 16, 16), (17, 14, 17, 17), (18, 15, 18, 18), (19, 16, 19, 19), (20, 17, 20, 20)
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Accessory (name, phone_id, brand_id) VALUES ('Case', 1, 1), ('Charger', 2, 2), ('Headphones', 3, 3), ('Screen Protector', 4, 4), ('Power Bank', 5, 5), ('Cover', 6, 6), ('Holder', 7, 7), ('Stand', 8, 8), ('Car Charger', 9, 9), ('USB Cable', 10, 10), ('Wireless Charger', 11, 11), ('Earbuds', 12, 12), ('Dock', 13, 13), ('Memory Card', 14, 14), ('SIM Card', 15, 15), ('Adapter', 16, 16), ('Bluetooth Speaker', 17, 17), ('Selfie Stick', 18, 18), ('VR Headset', 19, 19), ('Stylus', 20, 20)
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Rental (customer_id, phone_id, employee_id, rental_date, return_date, payment_id) VALUES (1, 1, 1, '2023-06-01', '2023-06-15', 1), (2, 2, 2, '2023-06-05', '2023-06-20', 2), (3, 3, 3, '2023-06-10', '2023-06-25', 3), (4, 1, 4, '2023-06-15', '2023-06-30', 4), (5, 2, 5, '2023-06-20', '2023-07-05', 5), (6, 3, 6, '2023-07-01', '2023-07-15', 6), (7, 4, 7, '2023-07-05', '2023-07-20', 7), (8, 5, 8, '2023-07-10', '2023-07-25', 8), (9, 6, 9, '2023-07-15', '2023-07-30', 9), (10, 7, 10, '2023-07-20', '2023-08-05', 10), (11, 8, 11, '2023-08-01', '2023-08-15', 11), (12, 9, 12, '2023-08-05', '2023-08-20', 12), (13, 10, 13, '2023-08-10', '2023-08-25', 13), (14, 11, 14, '2023-08-15', '2023-08-30', 14), (15, 12, 15, '2023-08-20', '2023-09-05', 15), (16, 13, 16, '2023-08-25', '2023-09-10', 16), (17, 14, 17, '2023-09-01', '2023-09-15', 17), (18, 15, 18, '2023-09-05', '2023-09-20', 18), (19, 16, 19, '2023-09-10', '2023-09-25', 19), (20, 17, 20, '2023-09-15', '2023-09-30', 20)
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Repair (phone_id, repair_date, description) VALUES (1, '2023-06-01', 'Screen replacement'), (2, '2023-06-05', 'Battery replacement'), (3, '2023-06-10', 'Speaker repair'), (4, '2023-06-15', 'Microphone repair'), (5, '2023-06-20', 'Camera replacement'), (6, '2023-06-25', 'Charging port repair'), (7, '2023-07-01', 'Screen repair'), (8, '2023-07-05', 'Software update'), (9, '2023-07-10', 'Water damage repair'), (10, '2023-07-15', 'Button replacement'), (11, '2023-07-20', 'Back cover replacement'), (12, '2023-07-25', 'Wi-Fi repair'), (13, '2023-08-01', 'Bluetooth repair'), (14, '2023-08-05', 'Fingerprint sensor repair'), (15, '2023-08-10', 'Face recognition repair'), (16, '2023-08-15', 'SIM tray repair'), (17, '2023-08-20', 'Antenna repair'), (18, '2023-08-25', 'Proximity sensor repair'), (19, '2023-09-01', 'GPS repair'), (20, '2023-09-05', 'Gyroscope repair')
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO Review (customer_id, phone_id, rating, comment) VALUES (1, 1, 5, 'Excellent'), (2, 2, 4, 'Good'), (3, 3, 3, 'Average'), (4, 4, 2, 'Poor'), (5, 5, 1, 'Very bad'), (6, 6, 5, 'Excellent'), (7, 7, 4, 'Good'), (8, 8, 3, 'Average'), (9, 9, 2, 'Poor'), (10, 10, 1, 'Very bad'), (11, 11, 5, 'Excellent'), (12, 12, 4, 'Good'), (13, 13, 3, 'Average'), (14, 14, 2, 'Poor'), (15, 15, 1, 'Very bad'), (16, 16, 5, 'Excellent'), (17, 17, 4, 'Good'), (18, 18, 3, 'Average'), (19, 19, 2, 'Poor'), (20, 20, 1, 'Very bad')
2024-06-27 02:59:15 - 20 returned as update count for SQL: INSERT INTO User (username, password) VALUES ('user1', 'pass1'), ('user2', 'pass2'), ('user3', 'pass3'), ('user4', 'pass4'), ('user5', 'pass5'), ('user6', 'pass6'), ('user7', 'pass7'), ('user8', 'pass8'), ('user9', 'pass9'), ('user10', 'pass10'), ('user11', 'pass11'), ('user12', 'pass12'), ('user13', 'pass13'), ('user14', 'pass14'), ('user15', 'pass15'), ('user16', 'pass16'), ('user17', 'pass17'), ('user18', 'pass18'), ('user19', 'pass19'), ('user20', 'pass20')
2024-06-27 02:59:15 - Executed SQL script from URL [file:/C:/Users/gabriel.dragomir/IdeaProjects/DragomirGabrielBogdan-P1/target/classes/data.sql] in 91 ms.
2024-06-27 02:59:15 - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-06-27 02:59:15 - HHH000412: Hibernate ORM core version 5.4.32.Final
2024-06-27 02:59:15 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-06-27 02:59:16 - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2024-06-27 02:59:17 - alter table review add column content varchar(255)
2024-06-27 02:59:17 - alter table employee_repair add constraint FK7mg4l42bmuddovevkodhsldp foreign key (repair_id) references repair (id)
2024-06-27 02:59:17 - alter table employee_repair add constraint FK43vsa60c7x5q4lg0pabv4do4p foreign key (employee_id) references employee (id)
2024-06-27 02:59:17 - alter table phone_accessory add constraint FKo66qgo714r8ogatkysk08i7ot foreign key (accessory_id) references accessory (id)
2024-06-27 02:59:17 - alter table phone_accessory add constraint FK318qde20dq59juw37muh0hoof foreign key (phone_id) references phone (id)
2024-06-27 02:59:17 - alter table purchase_order add constraint FK158vbkwgyf5r6ogk9nkugqv2c foreign key (customer_id) references customer (id)
2024-06-27 02:59:17 - alter table purchase_order add constraint FKplmilqprk3xgwul1lt25q3t9b foreign key (employee_id) references employee (id)
2024-06-27 02:59:17 - alter table purchase_order add constraint FKq1ucotgmtici0ksdm8tsotr29 foreign key (payment_id) references payment (id)
2024-06-27 02:59:17 - alter table purchase_order add constraint FKpjlabx3tmum70kvqxbaj38o31 foreign key (phone_id) references phone (id)
2024-06-27 02:59:17 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-06-27 02:59:17 - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:59:17 - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-06-27 02:59:19 - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3052395d, org.springframework.security.web.context.SecurityContextPersistenceFilter@14af57c3, org.springframework.security.web.header.HeaderWriterFilter@1c76b2fe, org.springframework.security.web.csrf.CsrfFilter@4197e859, org.springframework.security.web.authentication.logout.LogoutFilter@325a781c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@ae5d544, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2aeb3f3b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e5a77ef, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@a2ca681, org.springframework.security.web.session.SessionManagementFilter@47629063, org.springframework.security.web.access.ExceptionTranslationFilter@5abc488d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3615f8d9]
2024-06-27 02:59:20 - Starting ProtocolHandler ["http-nio-8080"]
2024-06-27 02:59:20 - Tomcat started on port(s): 8080 (http) with context path ''
2024-06-27 02:59:20 - Started StoreApplication in 12.436 seconds (JVM running for 13.275)
2024-06-27 02:59:25 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-06-27 02:59:25 - Initializing Servlet 'dispatcherServlet'
2024-06-27 02:59:25 - Completed initialization in 1 ms
2024-06-27 02:59:26 - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [400] milliseconds.
2024-06-27 02:59:26 - No mapping for GET /images/logo.png
2024-06-27 02:59:27 - No mapping for GET /images/logo.png
2024-06-27 02:59:29 - No mapping for GET /images/logo.png
2024-06-27 02:59:30 - No mapping for GET /images/logo.png
2024-06-27 02:59:31 - Fetching all stores
2024-06-27 02:59:31 - Setting JDBC Connection [HikariProxyConnection@800058852 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4] read-only
2024-06-27 02:59:31 - select store0_.id as id1_14_, store0_.name as name2_14_ from store store0_ order by store0_.id asc limit ?
2024-06-27 02:59:31 - select count(store0_.id) as col_0_0_ from store store0_
2024-06-27 02:59:31 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@800058852 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4]
2024-06-27 02:59:31 - No mapping for GET /images/logo.png
2024-06-27 02:59:32 - No mapping for GET /favicon.ico
2024-06-27 02:59:32 - No mapping for GET /images/logo.png
2024-06-27 02:59:33 - Fetching all rentals
2024-06-27 02:59:33 - Setting JDBC Connection [HikariProxyConnection@1811059927 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4] read-only
2024-06-27 02:59:33 - select rental0_.id as id1_10_, rental0_.customer_id as customer2_10_, rental0_.employee_id as employee3_10_, rental0_.payment_id as payment_4_10_, rental0_.phone_id as phone_id5_10_ from rental rental0_ order by rental0_.id asc limit ?
2024-06-27 02:59:33 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:59:33 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:59:33 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:59:33 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:59:33 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:59:33 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:59:33 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:59:33 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:59:33 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:59:33 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:59:33 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:59:33 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:59:33 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:59:33 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:59:33 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:59:33 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:59:33 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:59:33 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:59:33 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:59:33 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:59:33 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:59:33 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:59:33 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:59:33 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:59:33 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:59:33 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:59:33 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:59:33 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:59:33 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:59:33 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:59:33 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:59:33 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:59:33 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:59:33 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:59:33 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:59:33 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:59:33 - select customer0_.id as id1_2_0_, customer0_.name as name2_2_0_ from customer customer0_ where customer0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:59:33 - select employee0_.id as id1_3_0_, employee0_.name as name2_3_0_, employee0_.store_id as store_id3_3_0_, store1_.id as id1_14_1_, store1_.name as name2_14_1_ from employee employee0_ inner join store store1_ on employee0_.store_id=store1_.id where employee0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:59:33 - select payment0_.id as id1_6_0_, order1_.id as id1_9_1_, order1_.customer_id as customer2_9_1_, order1_.employee_id as employee3_9_1_, order1_.payment_id as payment_4_9_1_, order1_.phone_id as phone_id5_9_1_, customer2_.id as id1_2_2_, customer2_.name as name2_2_2_, employee3_.id as id1_3_3_, employee3_.name as name2_3_3_, employee3_.store_id as store_id3_3_3_, phone4_.id as id1_7_4_, phone4_.brand_id as brand_id3_7_4_, phone4_.model_id as model_id4_7_4_, phone4_.name as name2_7_4_, rental5_.id as id1_10_5_, rental5_.customer_id as customer2_10_5_, rental5_.employee_id as employee3_10_5_, rental5_.payment_id as payment_4_10_5_, rental5_.phone_id as phone_id5_10_5_, customer6_.id as id1_2_6_, customer6_.name as name2_2_6_, employee7_.id as id1_3_7_, employee7_.name as name2_3_7_, employee7_.store_id as store_id3_3_7_, phone8_.id as id1_7_8_, phone8_.brand_id as brand_id3_7_8_, phone8_.model_id as model_id4_7_8_, phone8_.name as name2_7_8_ from payment payment0_ left outer join purchase_order order1_ on payment0_.id=order1_.payment_id left outer join customer customer2_ on order1_.customer_id=customer2_.id left outer join employee employee3_ on order1_.employee_id=employee3_.id left outer join phone phone4_ on order1_.phone_id=phone4_.id left outer join rental rental5_ on payment0_.id=rental5_.payment_id left outer join customer customer6_ on rental5_.customer_id=customer6_.id left outer join employee employee7_ on rental5_.employee_id=employee7_.id left outer join phone phone8_ on rental5_.phone_id=phone8_.id where payment0_.id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:59:33 - select rental0_.id as id1_10_8_, rental0_.customer_id as customer2_10_8_, rental0_.employee_id as employee3_10_8_, rental0_.payment_id as payment_4_10_8_, rental0_.phone_id as phone_id5_10_8_, customer1_.id as id1_2_0_, customer1_.name as name2_2_0_, employee2_.id as id1_3_1_, employee2_.name as name2_3_1_, employee2_.store_id as store_id3_3_1_, store3_.id as id1_14_2_, store3_.name as name2_14_2_, payment4_.id as id1_6_3_, order5_.id as id1_9_4_, order5_.customer_id as customer2_9_4_, order5_.employee_id as employee3_9_4_, order5_.payment_id as payment_4_9_4_, order5_.phone_id as phone_id5_9_4_, phone6_.id as id1_7_5_, phone6_.brand_id as brand_id3_7_5_, phone6_.model_id as model_id4_7_5_, phone6_.name as name2_7_5_, brand7_.id as id1_1_6_, brand7_.name as name2_1_6_, model8_.id as id1_5_7_, model8_.brand_id as brand_id3_5_7_, model8_.name as name2_5_7_ from rental rental0_ inner join customer customer1_ on rental0_.customer_id=customer1_.id inner join employee employee2_ on rental0_.employee_id=employee2_.id left outer join store store3_ on employee2_.store_id=store3_.id inner join payment payment4_ on rental0_.payment_id=payment4_.id left outer join purchase_order order5_ on payment4_.id=order5_.payment_id inner join phone phone6_ on rental0_.phone_id=phone6_.id left outer join brand brand7_ on phone6_.brand_id=brand7_.id left outer join model model8_ on phone6_.model_id=model8_.id where rental0_.payment_id=?
2024-06-27 02:59:33 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:59:33 - select count(rental0_.id) as col_0_0_ from rental rental0_
2024-06-27 02:59:33 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1811059927 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4]
2024-06-27 02:59:35 - No mapping for GET /images/logo.png
2024-06-27 02:59:35 - Fetching all phones
2024-06-27 02:59:35 - Setting JDBC Connection [HikariProxyConnection@1885582301 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4] read-only
2024-06-27 02:59:35 - select phone0_.id as id1_7_, phone0_.brand_id as brand_id3_7_, phone0_.model_id as model_id4_7_, phone0_.name as name2_7_ from phone phone0_ order by phone0_.id asc limit ?
2024-06-27 02:59:35 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:59:35 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:59:35 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:59:35 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:59:35 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:59:35 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:59:35 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:59:35 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:59:35 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:59:35 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:59:35 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:59:35 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:59:35 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:59:35 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:59:35 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:35 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:59:36 - select model0_.id as id1_5_0_, model0_.brand_id as brand_id3_5_0_, model0_.name as name2_5_0_, brand1_.id as id1_1_1_, brand1_.name as name2_1_1_ from model model0_ inner join brand brand1_ on model0_.brand_id=brand1_.id where model0_.id=?
2024-06-27 02:59:36 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:59:36 - select count(phone0_.id) as col_0_0_ from phone phone0_
2024-06-27 02:59:36 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1885582301 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4]
2024-06-27 02:59:37 - No mapping for GET /images/logo.png
2024-06-27 02:59:37 - No mapping for GET /favicon.ico
2024-06-27 02:59:37 - Fetching all orders
2024-06-27 02:59:37 - Setting JDBC Connection [HikariProxyConnection@328279323 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4] read-only
2024-06-27 02:59:38 - select order0_.id as id1_9_, order0_.customer_id as customer2_9_, order0_.employee_id as employee3_9_, order0_.payment_id as payment_4_9_, order0_.phone_id as phone_id5_9_ from purchase_order order0_ order by order0_.id asc limit ?
2024-06-27 02:59:38 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@328279323 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4]
2024-06-27 02:59:39 - No mapping for GET /images/logo.png
2024-06-27 02:59:39 - Fetching all models
2024-06-27 02:59:39 - Setting JDBC Connection [HikariProxyConnection@1709998397 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4] read-only
2024-06-27 02:59:39 - select model0_.id as id1_5_, model0_.brand_id as brand_id3_5_, model0_.name as name2_5_ from model model0_ order by model0_.id asc limit ?
2024-06-27 02:59:39 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:39 - binding parameter [1] as [BIGINT] - [1]
2024-06-27 02:59:39 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:39 - binding parameter [1] as [BIGINT] - [2]
2024-06-27 02:59:39 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:39 - binding parameter [1] as [BIGINT] - [3]
2024-06-27 02:59:39 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:39 - binding parameter [1] as [BIGINT] - [4]
2024-06-27 02:59:39 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:39 - binding parameter [1] as [BIGINT] - [5]
2024-06-27 02:59:39 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:39 - binding parameter [1] as [BIGINT] - [6]
2024-06-27 02:59:39 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:39 - binding parameter [1] as [BIGINT] - [7]
2024-06-27 02:59:39 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:39 - binding parameter [1] as [BIGINT] - [8]
2024-06-27 02:59:39 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:39 - binding parameter [1] as [BIGINT] - [9]
2024-06-27 02:59:39 - select brand0_.id as id1_1_0_, brand0_.name as name2_1_0_ from brand brand0_ where brand0_.id=?
2024-06-27 02:59:39 - binding parameter [1] as [BIGINT] - [10]
2024-06-27 02:59:39 - select count(model0_.id) as col_0_0_ from model model0_
2024-06-27 02:59:39 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1709998397 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4]
2024-06-27 02:59:41 - No mapping for GET /images/logo.png
2024-06-27 02:59:41 - Fetching all customers
2024-06-27 02:59:41 - Setting JDBC Connection [HikariProxyConnection@1143433478 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4] read-only
2024-06-27 02:59:41 - select customer0_.id as id1_2_, customer0_.name as name2_2_ from customer customer0_ order by customer0_.id asc limit ?
2024-06-27 02:59:41 - select count(customer0_.id) as col_0_0_ from customer customer0_
2024-06-27 02:59:41 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1143433478 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4]
2024-06-27 02:59:43 - No mapping for GET /images/logo.png
2024-06-27 02:59:43 - No mapping for GET /favicon.ico
2024-06-27 02:59:44 - Fetching all brands
2024-06-27 02:59:44 - Setting JDBC Connection [HikariProxyConnection@166746856 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4] read-only
2024-06-27 02:59:44 - select brand0_.id as id1_1_, brand0_.name as name2_1_ from brand brand0_ order by brand0_.id asc limit ?
2024-06-27 02:59:44 - select count(brand0_.id) as col_0_0_ from brand brand0_
2024-06-27 02:59:44 - Resetting read-only flag of JDBC Connection [HikariProxyConnection@166746856 wrapping com.mysql.cj.jdbc.ConnectionImpl@6970b2d4]
2024-06-27 02:59:45 - No mapping for GET /images/logo.png
2024-06-27 02:59:59 - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-06-27 02:59:59 - HikariPool-1 - Shutdown initiated...
2024-06-27 02:59:59 - HikariPool-1 - Shutdown completed.
